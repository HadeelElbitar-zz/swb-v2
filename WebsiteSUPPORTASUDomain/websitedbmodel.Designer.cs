//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Applications), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Applications), "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Paths), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Applications), "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Roles), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Us__Appli__3864608B", "aspnet_Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Applications), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Users), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Paths), "aspnet_PersonalizationAllUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.aspnet_PersonalizationAllUsers), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.aspnet_Paths), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Pe__UserI__40058253", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.aspnet_Users), "aspnet_PersonalizationPerUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_PersonalizationPerUser), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.aspnet_Users), "aspnet_Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.aspnet_Profile), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_Member_College", "College", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.College), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Member), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_Member_Committee", "Committee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.Committee), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Member), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_EventSponsor_Sponsor", "Sponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.Sponsor), "EventSponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.EventSponsor), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_EventUniversity_University", "University", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.University), "EventUniversity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.EventUniversity), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_Member_Position", "Position", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.Position), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Member), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_MemberEvent_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.Member), "MemberEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.MemberEvent), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "aspnet_UsersInRoles", "aspnet_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Roles), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.aspnet_Users))]
[assembly: EdmRelationshipAttribute("websitedbModel", "UniversityCollege", "College", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.College), "University", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.University))]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_Gallery_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebsiteSUPPORTASUDomain.Event), "Gallery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Gallery), true)]
[assembly: EdmRelationshipAttribute("websitedbModel", "EventSponsor1", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Event), "Sponsor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Sponsor))]
[assembly: EdmRelationshipAttribute("websitedbModel", "EventUniversity1", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Event), "University", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.University))]
[assembly: EdmRelationshipAttribute("websitedbModel", "MemberEvent1", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Event), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Member))]
[assembly: EdmRelationshipAttribute("websitedbModel", "FK_Participant_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WebsiteSUPPORTASUDomain.Member), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebsiteSUPPORTASUDomain.Participant), true)]

#endregion

namespace WebsiteSUPPORTASUDomain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class websitedbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new websitedbEntities object using the connection string found in the 'websitedbEntities' section of the application configuration file.
        /// </summary>
        public websitedbEntities() : base("name=websitedbEntities", "websitedbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new websitedbEntities object.
        /// </summary>
        public websitedbEntities(string connectionString) : base(connectionString, "websitedbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new websitedbEntities object.
        /// </summary>
        public websitedbEntities(EntityConnection connection) : base(connection, "websitedbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Applications> aspnet_Applications
        {
            get
            {
                if ((_aspnet_Applications == null))
                {
                    _aspnet_Applications = base.CreateObjectSet<aspnet_Applications>("aspnet_Applications");
                }
                return _aspnet_Applications;
            }
        }
        private ObjectSet<aspnet_Applications> _aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Paths> aspnet_Paths
        {
            get
            {
                if ((_aspnet_Paths == null))
                {
                    _aspnet_Paths = base.CreateObjectSet<aspnet_Paths>("aspnet_Paths");
                }
                return _aspnet_Paths;
            }
        }
        private ObjectSet<aspnet_Paths> _aspnet_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsers
        {
            get
            {
                if ((_aspnet_PersonalizationAllUsers == null))
                {
                    _aspnet_PersonalizationAllUsers = base.CreateObjectSet<aspnet_PersonalizationAllUsers>("aspnet_PersonalizationAllUsers");
                }
                return _aspnet_PersonalizationAllUsers;
            }
        }
        private ObjectSet<aspnet_PersonalizationAllUsers> _aspnet_PersonalizationAllUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                if ((_aspnet_PersonalizationPerUser == null))
                {
                    _aspnet_PersonalizationPerUser = base.CreateObjectSet<aspnet_PersonalizationPerUser>("aspnet_PersonalizationPerUser");
                }
                return _aspnet_PersonalizationPerUser;
            }
        }
        private ObjectSet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Profile> aspnet_Profile
        {
            get
            {
                if ((_aspnet_Profile == null))
                {
                    _aspnet_Profile = base.CreateObjectSet<aspnet_Profile>("aspnet_Profile");
                }
                return _aspnet_Profile;
            }
        }
        private ObjectSet<aspnet_Profile> _aspnet_Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Roles> aspnet_Roles
        {
            get
            {
                if ((_aspnet_Roles == null))
                {
                    _aspnet_Roles = base.CreateObjectSet<aspnet_Roles>("aspnet_Roles");
                }
                return _aspnet_Roles;
            }
        }
        private ObjectSet<aspnet_Roles> _aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_SchemaVersions> aspnet_SchemaVersions
        {
            get
            {
                if ((_aspnet_SchemaVersions == null))
                {
                    _aspnet_SchemaVersions = base.CreateObjectSet<aspnet_SchemaVersions>("aspnet_SchemaVersions");
                }
                return _aspnet_SchemaVersions;
            }
        }
        private ObjectSet<aspnet_SchemaVersions> _aspnet_SchemaVersions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_WebEvent_Events> aspnet_WebEvent_Events
        {
            get
            {
                if ((_aspnet_WebEvent_Events == null))
                {
                    _aspnet_WebEvent_Events = base.CreateObjectSet<aspnet_WebEvent_Events>("aspnet_WebEvent_Events");
                }
                return _aspnet_WebEvent_Events;
            }
        }
        private ObjectSet<aspnet_WebEvent_Events> _aspnet_WebEvent_Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<College> Colleges
        {
            get
            {
                if ((_Colleges == null))
                {
                    _Colleges = base.CreateObjectSet<College>("Colleges");
                }
                return _Colleges;
            }
        }
        private ObjectSet<College> _Colleges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Committee> Committees
        {
            get
            {
                if ((_Committees == null))
                {
                    _Committees = base.CreateObjectSet<Committee>("Committees");
                }
                return _Committees;
            }
        }
        private ObjectSet<Committee> _Committees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactU> ContactUs
        {
            get
            {
                if ((_ContactUs == null))
                {
                    _ContactUs = base.CreateObjectSet<ContactU>("ContactUs");
                }
                return _ContactUs;
            }
        }
        private ObjectSet<ContactU> _ContactUs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventSponsor> EventSponsors
        {
            get
            {
                if ((_EventSponsors == null))
                {
                    _EventSponsors = base.CreateObjectSet<EventSponsor>("EventSponsors");
                }
                return _EventSponsors;
            }
        }
        private ObjectSet<EventSponsor> _EventSponsors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventUniversity> EventUniversities
        {
            get
            {
                if ((_EventUniversities == null))
                {
                    _EventUniversities = base.CreateObjectSet<EventUniversity>("EventUniversities");
                }
                return _EventUniversities;
            }
        }
        private ObjectSet<EventUniversity> _EventUniversities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gallery> Galleries
        {
            get
            {
                if ((_Galleries == null))
                {
                    _Galleries = base.CreateObjectSet<Gallery>("Galleries");
                }
                return _Galleries;
            }
        }
        private ObjectSet<Gallery> _Galleries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Interview> Interviews
        {
            get
            {
                if ((_Interviews == null))
                {
                    _Interviews = base.CreateObjectSet<Interview>("Interviews");
                }
                return _Interviews;
            }
        }
        private ObjectSet<Interview> _Interviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MemberEvent> MemberEvents
        {
            get
            {
                if ((_MemberEvents == null))
                {
                    _MemberEvents = base.CreateObjectSet<MemberEvent>("MemberEvents");
                }
                return _MemberEvents;
            }
        }
        private ObjectSet<MemberEvent> _MemberEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sponsor> Sponsors
        {
            get
            {
                if ((_Sponsors == null))
                {
                    _Sponsors = base.CreateObjectSet<Sponsor>("Sponsors");
                }
                return _Sponsors;
            }
        }
        private ObjectSet<Sponsor> _Sponsors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StaticPage> StaticPages
        {
            get
            {
                if ((_StaticPages == null))
                {
                    _StaticPages = base.CreateObjectSet<StaticPage>("StaticPages");
                }
                return _StaticPages;
            }
        }
        private ObjectSet<StaticPage> _StaticPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<University> Universities
        {
            get
            {
                if ((_Universities == null))
                {
                    _Universities = base.CreateObjectSet<University>("Universities");
                }
                return _Universities;
            }
        }
        private ObjectSet<University> _Universities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Workshop> Workshops
        {
            get
            {
                if ((_Workshops == null))
                {
                    _Workshops = base.CreateObjectSet<Workshop>("Workshops");
                }
                return _Workshops;
            }
        }
        private ObjectSet<Workshop> _Workshops;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Applications> vw_aspnet_Applications
        {
            get
            {
                if ((_vw_aspnet_Applications == null))
                {
                    _vw_aspnet_Applications = base.CreateObjectSet<vw_aspnet_Applications>("vw_aspnet_Applications");
                }
                return _vw_aspnet_Applications;
            }
        }
        private ObjectSet<vw_aspnet_Applications> _vw_aspnet_Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers
        {
            get
            {
                if ((_vw_aspnet_MembershipUsers == null))
                {
                    _vw_aspnet_MembershipUsers = base.CreateObjectSet<vw_aspnet_MembershipUsers>("vw_aspnet_MembershipUsers");
                }
                return _vw_aspnet_MembershipUsers;
            }
        }
        private ObjectSet<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Profiles> vw_aspnet_Profiles
        {
            get
            {
                if ((_vw_aspnet_Profiles == null))
                {
                    _vw_aspnet_Profiles = base.CreateObjectSet<vw_aspnet_Profiles>("vw_aspnet_Profiles");
                }
                return _vw_aspnet_Profiles;
            }
        }
        private ObjectSet<vw_aspnet_Profiles> _vw_aspnet_Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Roles> vw_aspnet_Roles
        {
            get
            {
                if ((_vw_aspnet_Roles == null))
                {
                    _vw_aspnet_Roles = base.CreateObjectSet<vw_aspnet_Roles>("vw_aspnet_Roles");
                }
                return _vw_aspnet_Roles;
            }
        }
        private ObjectSet<vw_aspnet_Roles> _vw_aspnet_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_Users> vw_aspnet_Users
        {
            get
            {
                if ((_vw_aspnet_Users == null))
                {
                    _vw_aspnet_Users = base.CreateObjectSet<vw_aspnet_Users>("vw_aspnet_Users");
                }
                return _vw_aspnet_Users;
            }
        }
        private ObjectSet<vw_aspnet_Users> _vw_aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles
        {
            get
            {
                if ((_vw_aspnet_UsersInRoles == null))
                {
                    _vw_aspnet_UsersInRoles = base.CreateObjectSet<vw_aspnet_UsersInRoles>("vw_aspnet_UsersInRoles");
                }
                return _vw_aspnet_UsersInRoles;
            }
        }
        private ObjectSet<vw_aspnet_UsersInRoles> _vw_aspnet_UsersInRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Paths> vw_aspnet_WebPartState_Paths
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Paths == null))
                {
                    _vw_aspnet_WebPartState_Paths = base.CreateObjectSet<vw_aspnet_WebPartState_Paths>("vw_aspnet_WebPartState_Paths");
                }
                return _vw_aspnet_WebPartState_Paths;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Paths> _vw_aspnet_WebPartState_Paths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_Shared> vw_aspnet_WebPartState_Shared
        {
            get
            {
                if ((_vw_aspnet_WebPartState_Shared == null))
                {
                    _vw_aspnet_WebPartState_Shared = base.CreateObjectSet<vw_aspnet_WebPartState_Shared>("vw_aspnet_WebPartState_Shared");
                }
                return _vw_aspnet_WebPartState_Shared;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_Shared> _vw_aspnet_WebPartState_Shared;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_WebPartState_User> vw_aspnet_WebPartState_User
        {
            get
            {
                if ((_vw_aspnet_WebPartState_User == null))
                {
                    _vw_aspnet_WebPartState_User = base.CreateObjectSet<vw_aspnet_WebPartState_User>("vw_aspnet_WebPartState_User");
                }
                return _vw_aspnet_WebPartState_User;
            }
        }
        private ObjectSet<vw_aspnet_WebPartState_User> _vw_aspnet_WebPartState_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SponsorView> SponsorViews
        {
            get
            {
                if ((_SponsorViews == null))
                {
                    _SponsorViews = base.CreateObjectSet<SponsorView>("SponsorViews");
                }
                return _SponsorViews;
            }
        }
        private ObjectSet<SponsorView> _SponsorViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventsName> EventsNames
        {
            get
            {
                if ((_EventsNames == null))
                {
                    _EventsNames = base.CreateObjectSet<EventsName>("EventsNames");
                }
                return _EventsNames;
            }
        }
        private ObjectSet<EventsName> _EventsNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GalleryName> GalleryNames
        {
            get
            {
                if ((_GalleryNames == null))
                {
                    _GalleryNames = base.CreateObjectSet<GalleryName>("GalleryNames");
                }
                return _GalleryNames;
            }
        }
        private ObjectSet<GalleryName> _GalleryNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MembersName> MembersNames
        {
            get
            {
                if ((_MembersNames == null))
                {
                    _MembersNames = base.CreateObjectSet<MembersName>("MembersNames");
                }
                return _MembersNames;
            }
        }
        private ObjectSet<MembersName> _MembersNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Participant> Participant
        {
            get
            {
                if ((_Participant == null))
                {
                    _Participant = base.CreateObjectSet<Participant>("Participant");
                }
                return _Participant;
            }
        }
        private ObjectSet<Participant> _Participant;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Applications(aspnet_Applications aspnet_Applications)
        {
            base.AddObject("aspnet_Applications", aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Paths(aspnet_Paths aspnet_Paths)
        {
            base.AddObject("aspnet_Paths", aspnet_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationAllUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationAllUsers(aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers)
        {
            base.AddObject("aspnet_PersonalizationAllUsers", aspnet_PersonalizationAllUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_PersonalizationPerUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser)
        {
            base.AddObject("aspnet_PersonalizationPerUser", aspnet_PersonalizationPerUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Profile(aspnet_Profile aspnet_Profile)
        {
            base.AddObject("aspnet_Profile", aspnet_Profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Roles(aspnet_Roles aspnet_Roles)
        {
            base.AddObject("aspnet_Roles", aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_SchemaVersions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_SchemaVersions(aspnet_SchemaVersions aspnet_SchemaVersions)
        {
            base.AddObject("aspnet_SchemaVersions", aspnet_SchemaVersions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_WebEvent_Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_WebEvent_Events(aspnet_WebEvent_Events aspnet_WebEvent_Events)
        {
            base.AddObject("aspnet_WebEvent_Events", aspnet_WebEvent_Events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colleges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColleges(College college)
        {
            base.AddObject("Colleges", college);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Committees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommittees(Committee committee)
        {
            base.AddObject("Committees", committee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactUs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactUs(ContactU contactU)
        {
            base.AddObject("ContactUs", contactU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventSponsors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventSponsors(EventSponsor eventSponsor)
        {
            base.AddObject("EventSponsors", eventSponsor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventUniversities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventUniversities(EventUniversity eventUniversity)
        {
            base.AddObject("EventUniversities", eventUniversity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Galleries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGalleries(Gallery gallery)
        {
            base.AddObject("Galleries", gallery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Interviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInterviews(Interview interview)
        {
            base.AddObject("Interviews", interview);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MemberEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMemberEvents(MemberEvent memberEvent)
        {
            base.AddObject("MemberEvents", memberEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sponsors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSponsors(Sponsor sponsor)
        {
            base.AddObject("Sponsors", sponsor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StaticPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaticPages(StaticPage staticPage)
        {
            base.AddObject("StaticPages", staticPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Universities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUniversities(University university)
        {
            base.AddObject("Universities", university);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Workshops EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkshops(Workshop workshop)
        {
            base.AddObject("Workshops", workshop);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Applications(vw_aspnet_Applications vw_aspnet_Applications)
        {
            base.AddObject("vw_aspnet_Applications", vw_aspnet_Applications);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_MembershipUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_MembershipUsers(vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers)
        {
            base.AddObject("vw_aspnet_MembershipUsers", vw_aspnet_MembershipUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Profiles(vw_aspnet_Profiles vw_aspnet_Profiles)
        {
            base.AddObject("vw_aspnet_Profiles", vw_aspnet_Profiles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Roles(vw_aspnet_Roles vw_aspnet_Roles)
        {
            base.AddObject("vw_aspnet_Roles", vw_aspnet_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_Users(vw_aspnet_Users vw_aspnet_Users)
        {
            base.AddObject("vw_aspnet_Users", vw_aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_UsersInRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_UsersInRoles(vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles)
        {
            base.AddObject("vw_aspnet_UsersInRoles", vw_aspnet_UsersInRoles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Paths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Paths(vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths)
        {
            base.AddObject("vw_aspnet_WebPartState_Paths", vw_aspnet_WebPartState_Paths);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_Shared EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_Shared(vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared)
        {
            base.AddObject("vw_aspnet_WebPartState_Shared", vw_aspnet_WebPartState_Shared);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_WebPartState_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_WebPartState_User(vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User)
        {
            base.AddObject("vw_aspnet_WebPartState_User", vw_aspnet_WebPartState_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SponsorViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSponsorViews(SponsorView sponsorView)
        {
            base.AddObject("SponsorViews", sponsorView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventsNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventsNames(EventsName eventsName)
        {
            base.AddObject("EventsNames", eventsName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GalleryNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGalleryNames(GalleryName galleryName)
        {
            base.AddObject("GalleryNames", galleryName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MembersNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembersNames(MembersName membersName)
        {
            base.AddObject("MembersNames", membersName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Participant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParticipant(Participant participant)
        {
            base.AddObject("Participant", participant);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        public int AddCollege(global::System.String name, global::System.String location, global::System.String comment)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddCollege", nameParameter, locationParameter, commentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        public int AddCommittee(global::System.String name, global::System.String description)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddCommittee", nameParameter, descriptionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="memberID">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        public int AddEventMember(Nullable<global::System.Int32> memberID, Nullable<global::System.Int32> eventID)
        {
            ObjectParameter memberIDParameter;
            if (memberID.HasValue)
            {
                memberIDParameter = new ObjectParameter("MemberID", memberID);
            }
            else
            {
                memberIDParameter = new ObjectParameter("MemberID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddEventMember", memberIDParameter, eventIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sponsorID">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        public int AddEventSponsor(Nullable<global::System.Int32> sponsorID, Nullable<global::System.Int32> eventID)
        {
            ObjectParameter sponsorIDParameter;
            if (sponsorID.HasValue)
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", sponsorID);
            }
            else
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddEventSponsor", sponsorIDParameter, eventIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="universityID">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        public int AddEventUniversity(Nullable<global::System.Int32> universityID, Nullable<global::System.Int32> eventID)
        {
            ObjectParameter universityIDParameter;
            if (universityID.HasValue)
            {
                universityIDParameter = new ObjectParameter("UniversityID", universityID);
            }
            else
            {
                universityIDParameter = new ObjectParameter("UniversityID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddEventUniversity", universityIDParameter, eventIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="eventID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int AddGallery(Nullable<global::System.Int32> eventID, global::System.String name, global::System.String type, global::System.String location, global::System.String comments)
        {
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("eventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("eventID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddGallery", eventIDParameter, nameParameter, typeParameter, locationParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="comment">No Metadata Documentation available.</param>
        public int AddPosition(global::System.String position, global::System.String comment)
        {
            ObjectParameter positionParameter;
            if (position != null)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.String));
            }
    
            ObjectParameter commentParameter;
            if (comment != null)
            {
                commentParameter = new ObjectParameter("Comment", comment);
            }
            else
            {
                commentParameter = new ObjectParameter("Comment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddPosition", positionParameter, commentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sponsorName">No Metadata Documentation available.</param>
        /// <param name="sponsorEmail">No Metadata Documentation available.</param>
        /// <param name="sponsorWebsite">No Metadata Documentation available.</param>
        /// <param name="sponsorMobile">No Metadata Documentation available.</param>
        /// <param name="sponsorComment">No Metadata Documentation available.</param>
        public int AddSponsor(global::System.String sponsorName, global::System.String sponsorEmail, global::System.String sponsorWebsite, global::System.String sponsorMobile, global::System.String sponsorComment)
        {
            ObjectParameter sponsorNameParameter;
            if (sponsorName != null)
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", sponsorName);
            }
            else
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", typeof(global::System.String));
            }
    
            ObjectParameter sponsorEmailParameter;
            if (sponsorEmail != null)
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", sponsorEmail);
            }
            else
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", typeof(global::System.String));
            }
    
            ObjectParameter sponsorWebsiteParameter;
            if (sponsorWebsite != null)
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", sponsorWebsite);
            }
            else
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", typeof(global::System.String));
            }
    
            ObjectParameter sponsorMobileParameter;
            if (sponsorMobile != null)
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", sponsorMobile);
            }
            else
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", typeof(global::System.String));
            }
    
            ObjectParameter sponsorCommentParameter;
            if (sponsorComment != null)
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", sponsorComment);
            }
            else
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddSponsor", sponsorNameParameter, sponsorEmailParameter, sponsorWebsiteParameter, sponsorMobileParameter, sponsorCommentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        public int AddStaticPage(global::System.String name, global::System.String text)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddStaticPage", nameParameter, textParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        public int AddUniversity(global::System.String position, global::System.String location)
        {
            ObjectParameter positionParameter;
            if (position != null)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddUniversity", positionParameter, locationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="universityID">No Metadata Documentation available.</param>
        /// <param name="collegeID">No Metadata Documentation available.</param>
        public int AddUniversityCollege(Nullable<global::System.Int32> universityID, Nullable<global::System.Int32> collegeID)
        {
            ObjectParameter universityIDParameter;
            if (universityID.HasValue)
            {
                universityIDParameter = new ObjectParameter("UniversityID", universityID);
            }
            else
            {
                universityIDParameter = new ObjectParameter("UniversityID", typeof(global::System.Int32));
            }
    
            ObjectParameter collegeIDParameter;
            if (collegeID.HasValue)
            {
                collegeIDParameter = new ObjectParameter("CollegeID", collegeID);
            }
            else
            {
                collegeIDParameter = new ObjectParameter("CollegeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddUniversityCollege", universityIDParameter, collegeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteCollege(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteCollege", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteCommittee(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteCommittee", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iDValue">No Metadata Documentation available.</param>
        public int DeleteContact(Nullable<global::System.Int32> iDValue)
        {
            ObjectParameter iDValueParameter;
            if (iDValue.HasValue)
            {
                iDValueParameter = new ObjectParameter("IDValue", iDValue);
            }
            else
            {
                iDValueParameter = new ObjectParameter("IDValue", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteContact", iDValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteEvent(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteEvent", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="galleryID">No Metadata Documentation available.</param>
        public int deleteGallery(Nullable<global::System.Int32> galleryID)
        {
            ObjectParameter galleryIDParameter;
            if (galleryID.HasValue)
            {
                galleryIDParameter = new ObjectParameter("galleryID", galleryID);
            }
            else
            {
                galleryIDParameter = new ObjectParameter("galleryID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("deleteGallery", galleryIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteMember(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteMember", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeletePosition(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeletePosition", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sponsorID">No Metadata Documentation available.</param>
        public int Deletesponsor(Nullable<global::System.Int32> sponsorID)
        {
            ObjectParameter sponsorIDParameter;
            if (sponsorID.HasValue)
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", sponsorID);
            }
            else
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Deletesponsor", sponsorIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteStaticPage(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteStaticPage", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteUniversity(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteUniversity", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int EditCollege(Nullable<global::System.Int32> iD, global::System.String name, global::System.String location, global::System.String comments)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditCollege", iDParameter, nameParameter, locationParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        public int EditCommittee(Nullable<global::System.Int32> iD, global::System.String name, global::System.String description)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditCommittee", iDParameter, nameParameter, descriptionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="eventID">No Metadata Documentation available.</param>
        /// <param name="galleryID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int editGallery(Nullable<global::System.Int32> eventID, Nullable<global::System.Int32> galleryID, global::System.String name, global::System.String type, global::System.String location, global::System.String comments)
        {
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("eventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("eventID", typeof(global::System.Int32));
            }
    
            ObjectParameter galleryIDParameter;
            if (galleryID.HasValue)
            {
                galleryIDParameter = new ObjectParameter("galleryID", galleryID);
            }
            else
            {
                galleryIDParameter = new ObjectParameter("galleryID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("type", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("editGallery", eventIDParameter, galleryIDParameter, nameParameter, typeParameter, locationParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int EditPosition(Nullable<global::System.Int32> iD, global::System.String position, global::System.String comments)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionParameter;
            if (position != null)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditPosition", iDParameter, positionParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        public int EditStaticPage(Nullable<global::System.Int32> iD, global::System.String name, global::System.String text)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditStaticPage", iDParameter, nameParameter, textParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="location">No Metadata Documentation available.</param>
        public int EditUniversity(Nullable<global::System.Int32> iD, global::System.String name, global::System.String location)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter locationParameter;
            if (location != null)
            {
                locationParameter = new ObjectParameter("location", location);
            }
            else
            {
                locationParameter = new ObjectParameter("location", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditUniversity", iDParameter, nameParameter, locationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<College> GetCollege(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<College>("GetCollege", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<College> GetCollege(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<College>("GetCollege", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<College> GetColleges()
        {
            return base.ExecuteFunction<College>("GetColleges");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<College> GetColleges(MergeOption mergeOption)
        {
            return base.ExecuteFunction<College>("GetColleges", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Committee> GetCommittee(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Committee>("GetCommittee", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Committee> GetCommittee(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Committee>("GetCommittee", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Committee> GetCommittees()
        {
            return base.ExecuteFunction<Committee>("GetCommittees");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Committee> GetCommittees(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Committee>("GetCommittees", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ContactU> GetContactUs()
        {
            return base.ExecuteFunction<ContactU>("GetContactUs");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<ContactU> GetContactUs(MergeOption mergeOption)
        {
            return base.ExecuteFunction<ContactU>("GetContactUs", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="shortDescription">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int AddEvent(global::System.String name, Nullable<global::System.DateTime> startDate, Nullable<global::System.DateTime> endDate, global::System.String description, global::System.String shortDescription, global::System.String comments)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter endDateParameter;
            if (endDate.HasValue)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter shortDescriptionParameter;
            if (shortDescription != null)
            {
                shortDescriptionParameter = new ObjectParameter("ShortDescription", shortDescription);
            }
            else
            {
                shortDescriptionParameter = new ObjectParameter("ShortDescription", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddEvent", nameParameter, startDateParameter, endDateParameter, descriptionParameter, shortDescriptionParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fullname">No Metadata Documentation available.</param>
        /// <param name="mobile">No Metadata Documentation available.</param>
        /// <param name="homePhone">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="committeeID">No Metadata Documentation available.</param>
        /// <param name="collegeID">No Metadata Documentation available.</param>
        /// <param name="universityID">No Metadata Documentation available.</param>
        /// <param name="positionID">No Metadata Documentation available.</param>
        /// <param name="state">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="hiredate">No Metadata Documentation available.</param>
        /// <param name="birthDate">No Metadata Documentation available.</param>
        /// <param name="profilePicture">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int AddMember(global::System.String fullname, global::System.String mobile, global::System.String homePhone, global::System.String email, Nullable<global::System.Int32> committeeID, Nullable<global::System.Int32> collegeID, Nullable<global::System.Int32> universityID, Nullable<global::System.Int32> positionID, global::System.String state, global::System.String address, Nullable<global::System.DateTime> hiredate, Nullable<global::System.DateTime> birthDate, global::System.String profilePicture, global::System.String comments)
        {
            ObjectParameter fullnameParameter;
            if (fullname != null)
            {
                fullnameParameter = new ObjectParameter("fullname", fullname);
            }
            else
            {
                fullnameParameter = new ObjectParameter("fullname", typeof(global::System.String));
            }
    
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            ObjectParameter homePhoneParameter;
            if (homePhone != null)
            {
                homePhoneParameter = new ObjectParameter("HomePhone", homePhone);
            }
            else
            {
                homePhoneParameter = new ObjectParameter("HomePhone", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter committeeIDParameter;
            if (committeeID.HasValue)
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", committeeID);
            }
            else
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", typeof(global::System.Int32));
            }
    
            ObjectParameter collegeIDParameter;
            if (collegeID.HasValue)
            {
                collegeIDParameter = new ObjectParameter("CollegeID", collegeID);
            }
            else
            {
                collegeIDParameter = new ObjectParameter("CollegeID", typeof(global::System.Int32));
            }
    
            ObjectParameter universityIDParameter;
            if (universityID.HasValue)
            {
                universityIDParameter = new ObjectParameter("UniversityID", universityID);
            }
            else
            {
                universityIDParameter = new ObjectParameter("UniversityID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionIDParameter;
            if (positionID.HasValue)
            {
                positionIDParameter = new ObjectParameter("PositionID", positionID);
            }
            else
            {
                positionIDParameter = new ObjectParameter("PositionID", typeof(global::System.Int32));
            }
    
            ObjectParameter stateParameter;
            if (state != null)
            {
                stateParameter = new ObjectParameter("state", state);
            }
            else
            {
                stateParameter = new ObjectParameter("state", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter hiredateParameter;
            if (hiredate.HasValue)
            {
                hiredateParameter = new ObjectParameter("hiredate", hiredate);
            }
            else
            {
                hiredateParameter = new ObjectParameter("hiredate", typeof(global::System.DateTime));
            }
    
            ObjectParameter birthDateParameter;
            if (birthDate.HasValue)
            {
                birthDateParameter = new ObjectParameter("BirthDate", birthDate);
            }
            else
            {
                birthDateParameter = new ObjectParameter("BirthDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter profilePictureParameter;
            if (profilePicture != null)
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", profilePicture);
            }
            else
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddMember", fullnameParameter, mobileParameter, homePhoneParameter, emailParameter, committeeIDParameter, collegeIDParameter, universityIDParameter, positionIDParameter, stateParameter, addressParameter, hiredateParameter, birthDateParameter, profilePictureParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Event> GetEvent(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Event>("GetEvent", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Event> GetEvent(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Event>("GetEvent", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="eventID">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> getEventGallery(Nullable<global::System.Int32> eventID, global::System.String type)
        {
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("eventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("eventID", typeof(global::System.Int32));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Gallery>("getEventGallery", eventIDParameter, typeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> getEventGallery(Nullable<global::System.Int32> eventID, global::System.String type, MergeOption mergeOption)
        {
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("eventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("eventID", typeof(global::System.Int32));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Gallery>("getEventGallery", mergeOption, eventIDParameter, typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Event> GetEvents()
        {
            return base.ExecuteFunction<Event>("GetEvents");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Event> GetEvents(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Event>("GetEvents", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EventsName> GetEventsNames()
        {
            return base.ExecuteFunction<EventsName>("GetEventsNames");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<EventsName> GetEventsNames(MergeOption mergeOption)
        {
            return base.ExecuteFunction<EventsName>("GetEventsNames", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        public ObjectResult<SponsorView> GETEventSponsors(global::System.String type, Nullable<global::System.Int32> eventID)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SponsorView>("GETEventSponsors", typeParameter, eventIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        public ObjectResult<SponsorView> GETEventSponsors(global::System.String type, Nullable<global::System.Int32> eventID, MergeOption mergeOption)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<SponsorView>("GETEventSponsors", mergeOption, typeParameter, eventIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> getGallery(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Gallery>("getGallery", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> getGallery(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Gallery>("getGallery", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GalleryName> getGalleryNames()
        {
            return base.ExecuteFunction<GalleryName>("getGalleryNames");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<GalleryName> getGalleryNames(MergeOption mergeOption)
        {
            return base.ExecuteFunction<GalleryName>("getGalleryNames", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Member> GetMember(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("GetMember", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Member> GetMember(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Member>("GetMember", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<MembersName> GetMembersNames()
        {
            return base.ExecuteFunction<MembersName>("GetMembersNames");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<MembersName> GetMembersNames(MergeOption mergeOption)
        {
            return base.ExecuteFunction<MembersName>("GetMembersNames", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Position> GetPosition(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Position>("GetPosition", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Position> GetPosition(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Position>("GetPosition", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Position> GetPositions()
        {
            return base.ExecuteFunction<Position>("GetPositions");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Position> GetPositions(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Position>("GetPositions", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Sponsor> GETSponsor(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Sponsor>("GETSponsor", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<Sponsor> GETSponsor(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Sponsor>("GETSponsor", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Sponsor> GETSponsors()
        {
            return base.ExecuteFunction<Sponsor>("GETSponsors");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Sponsor> GETSponsors(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Sponsor>("GETSponsors", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<StaticPage> GetStaticPage(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<StaticPage>("GetStaticPage", nameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<StaticPage> GetStaticPage(global::System.String name, MergeOption mergeOption)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<StaticPage>("GetStaticPage", mergeOption, nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<StaticPage> GetStaticPages()
        {
            return base.ExecuteFunction<StaticPage>("GetStaticPages");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<StaticPage> GetStaticPages(MergeOption mergeOption)
        {
            return base.ExecuteFunction<StaticPage>("GetStaticPages", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<University> GetUniversities()
        {
            return base.ExecuteFunction<University>("GetUniversities");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<University> GetUniversities(MergeOption mergeOption)
        {
            return base.ExecuteFunction<University>("GetUniversities", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<University> GetUniversity(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<University>("GetUniversity", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<University> GetUniversity(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<University>("GetUniversity", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="contactName">No Metadata Documentation available.</param>
        /// <param name="contactEmail">No Metadata Documentation available.</param>
        /// <param name="contactSubject">No Metadata Documentation available.</param>
        /// <param name="contactMessage">No Metadata Documentation available.</param>
        public int AddContactUs(global::System.String contactName, global::System.String contactEmail, global::System.String contactSubject, global::System.String contactMessage)
        {
            ObjectParameter contactNameParameter;
            if (contactName != null)
            {
                contactNameParameter = new ObjectParameter("ContactName", contactName);
            }
            else
            {
                contactNameParameter = new ObjectParameter("ContactName", typeof(global::System.String));
            }
    
            ObjectParameter contactEmailParameter;
            if (contactEmail != null)
            {
                contactEmailParameter = new ObjectParameter("ContactEmail", contactEmail);
            }
            else
            {
                contactEmailParameter = new ObjectParameter("ContactEmail", typeof(global::System.String));
            }
    
            ObjectParameter contactSubjectParameter;
            if (contactSubject != null)
            {
                contactSubjectParameter = new ObjectParameter("ContactSubject", contactSubject);
            }
            else
            {
                contactSubjectParameter = new ObjectParameter("ContactSubject", typeof(global::System.String));
            }
    
            ObjectParameter contactMessageParameter;
            if (contactMessage != null)
            {
                contactMessageParameter = new ObjectParameter("ContactMessage", contactMessage);
            }
            else
            {
                contactMessageParameter = new ObjectParameter("ContactMessage", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddContactUs", contactNameParameter, contactEmailParameter, contactSubjectParameter, contactMessageParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="galleryID">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> selectGalleryByID(Nullable<global::System.Int32> galleryID)
        {
            ObjectParameter galleryIDParameter;
            if (galleryID.HasValue)
            {
                galleryIDParameter = new ObjectParameter("galleryID", galleryID);
            }
            else
            {
                galleryIDParameter = new ObjectParameter("galleryID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Gallery>("selectGalleryByID", galleryIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="galleryID">No Metadata Documentation available.</param>
        public ObjectResult<Gallery> selectGalleryByID(Nullable<global::System.Int32> galleryID, MergeOption mergeOption)
        {
            ObjectParameter galleryIDParameter;
            if (galleryID.HasValue)
            {
                galleryIDParameter = new ObjectParameter("galleryID", galleryID);
            }
            else
            {
                galleryIDParameter = new ObjectParameter("galleryID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Gallery>("selectGalleryByID", mergeOption, galleryIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="fullname">No Metadata Documentation available.</param>
        /// <param name="mobile">No Metadata Documentation available.</param>
        /// <param name="homePhone">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="committeeID">No Metadata Documentation available.</param>
        /// <param name="collegeID">No Metadata Documentation available.</param>
        /// <param name="universityID">No Metadata Documentation available.</param>
        /// <param name="positionID">No Metadata Documentation available.</param>
        /// <param name="state">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="hiredate">No Metadata Documentation available.</param>
        /// <param name="birthDate">No Metadata Documentation available.</param>
        /// <param name="profilePicture">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Member> EditMember(Nullable<global::System.Int32> iD, global::System.String fullname, global::System.String mobile, global::System.String homePhone, global::System.String email, Nullable<global::System.Int32> committeeID, Nullable<global::System.Int32> collegeID, Nullable<global::System.Int32> universityID, Nullable<global::System.Int32> positionID, global::System.String state, global::System.String address, Nullable<global::System.DateTime> hiredate, Nullable<global::System.DateTime> birthDate, global::System.String profilePicture, global::System.String comments)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter fullnameParameter;
            if (fullname != null)
            {
                fullnameParameter = new ObjectParameter("fullname", fullname);
            }
            else
            {
                fullnameParameter = new ObjectParameter("fullname", typeof(global::System.String));
            }
    
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            ObjectParameter homePhoneParameter;
            if (homePhone != null)
            {
                homePhoneParameter = new ObjectParameter("HomePhone", homePhone);
            }
            else
            {
                homePhoneParameter = new ObjectParameter("HomePhone", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter committeeIDParameter;
            if (committeeID.HasValue)
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", committeeID);
            }
            else
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", typeof(global::System.Int32));
            }
    
            ObjectParameter collegeIDParameter;
            if (collegeID.HasValue)
            {
                collegeIDParameter = new ObjectParameter("CollegeID", collegeID);
            }
            else
            {
                collegeIDParameter = new ObjectParameter("CollegeID", typeof(global::System.Int32));
            }
    
            ObjectParameter universityIDParameter;
            if (universityID.HasValue)
            {
                universityIDParameter = new ObjectParameter("UniversityID", universityID);
            }
            else
            {
                universityIDParameter = new ObjectParameter("UniversityID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionIDParameter;
            if (positionID.HasValue)
            {
                positionIDParameter = new ObjectParameter("PositionID", positionID);
            }
            else
            {
                positionIDParameter = new ObjectParameter("PositionID", typeof(global::System.Int32));
            }
    
            ObjectParameter stateParameter;
            if (state != null)
            {
                stateParameter = new ObjectParameter("state", state);
            }
            else
            {
                stateParameter = new ObjectParameter("state", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter hiredateParameter;
            if (hiredate.HasValue)
            {
                hiredateParameter = new ObjectParameter("hiredate", hiredate);
            }
            else
            {
                hiredateParameter = new ObjectParameter("hiredate", typeof(global::System.DateTime));
            }
    
            ObjectParameter birthDateParameter;
            if (birthDate.HasValue)
            {
                birthDateParameter = new ObjectParameter("BirthDate", birthDate);
            }
            else
            {
                birthDateParameter = new ObjectParameter("BirthDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter profilePictureParameter;
            if (profilePicture != null)
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", profilePicture);
            }
            else
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("EditMember", iDParameter, fullnameParameter, mobileParameter, homePhoneParameter, emailParameter, committeeIDParameter, collegeIDParameter, universityIDParameter, positionIDParameter, stateParameter, addressParameter, hiredateParameter, birthDateParameter, profilePictureParameter, commentsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="fullname">No Metadata Documentation available.</param>
        /// <param name="mobile">No Metadata Documentation available.</param>
        /// <param name="homePhone">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="committeeID">No Metadata Documentation available.</param>
        /// <param name="collegeID">No Metadata Documentation available.</param>
        /// <param name="universityID">No Metadata Documentation available.</param>
        /// <param name="positionID">No Metadata Documentation available.</param>
        /// <param name="state">No Metadata Documentation available.</param>
        /// <param name="address">No Metadata Documentation available.</param>
        /// <param name="hiredate">No Metadata Documentation available.</param>
        /// <param name="birthDate">No Metadata Documentation available.</param>
        /// <param name="profilePicture">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public ObjectResult<Member> EditMember(Nullable<global::System.Int32> iD, global::System.String fullname, global::System.String mobile, global::System.String homePhone, global::System.String email, Nullable<global::System.Int32> committeeID, Nullable<global::System.Int32> collegeID, Nullable<global::System.Int32> universityID, Nullable<global::System.Int32> positionID, global::System.String state, global::System.String address, Nullable<global::System.DateTime> hiredate, Nullable<global::System.DateTime> birthDate, global::System.String profilePicture, global::System.String comments, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter fullnameParameter;
            if (fullname != null)
            {
                fullnameParameter = new ObjectParameter("fullname", fullname);
            }
            else
            {
                fullnameParameter = new ObjectParameter("fullname", typeof(global::System.String));
            }
    
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            ObjectParameter homePhoneParameter;
            if (homePhone != null)
            {
                homePhoneParameter = new ObjectParameter("HomePhone", homePhone);
            }
            else
            {
                homePhoneParameter = new ObjectParameter("HomePhone", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter committeeIDParameter;
            if (committeeID.HasValue)
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", committeeID);
            }
            else
            {
                committeeIDParameter = new ObjectParameter("CommitteeID", typeof(global::System.Int32));
            }
    
            ObjectParameter collegeIDParameter;
            if (collegeID.HasValue)
            {
                collegeIDParameter = new ObjectParameter("CollegeID", collegeID);
            }
            else
            {
                collegeIDParameter = new ObjectParameter("CollegeID", typeof(global::System.Int32));
            }
    
            ObjectParameter universityIDParameter;
            if (universityID.HasValue)
            {
                universityIDParameter = new ObjectParameter("UniversityID", universityID);
            }
            else
            {
                universityIDParameter = new ObjectParameter("UniversityID", typeof(global::System.Int32));
            }
    
            ObjectParameter positionIDParameter;
            if (positionID.HasValue)
            {
                positionIDParameter = new ObjectParameter("PositionID", positionID);
            }
            else
            {
                positionIDParameter = new ObjectParameter("PositionID", typeof(global::System.Int32));
            }
    
            ObjectParameter stateParameter;
            if (state != null)
            {
                stateParameter = new ObjectParameter("state", state);
            }
            else
            {
                stateParameter = new ObjectParameter("state", typeof(global::System.String));
            }
    
            ObjectParameter addressParameter;
            if (address != null)
            {
                addressParameter = new ObjectParameter("address", address);
            }
            else
            {
                addressParameter = new ObjectParameter("address", typeof(global::System.String));
            }
    
            ObjectParameter hiredateParameter;
            if (hiredate.HasValue)
            {
                hiredateParameter = new ObjectParameter("hiredate", hiredate);
            }
            else
            {
                hiredateParameter = new ObjectParameter("hiredate", typeof(global::System.DateTime));
            }
    
            ObjectParameter birthDateParameter;
            if (birthDate.HasValue)
            {
                birthDateParameter = new ObjectParameter("BirthDate", birthDate);
            }
            else
            {
                birthDateParameter = new ObjectParameter("BirthDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter profilePictureParameter;
            if (profilePicture != null)
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", profilePicture);
            }
            else
            {
                profilePictureParameter = new ObjectParameter("ProfilePicture", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("EditMember", mergeOption, iDParameter, fullnameParameter, mobileParameter, homePhoneParameter, emailParameter, committeeIDParameter, collegeIDParameter, universityIDParameter, positionIDParameter, stateParameter, addressParameter, hiredateParameter, birthDateParameter, profilePictureParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sponsorID">No Metadata Documentation available.</param>
        /// <param name="sponsorName">No Metadata Documentation available.</param>
        /// <param name="sponsorEmail">No Metadata Documentation available.</param>
        /// <param name="sponsorWebsite">No Metadata Documentation available.</param>
        /// <param name="sponsorMobile">No Metadata Documentation available.</param>
        /// <param name="sponsorComment">No Metadata Documentation available.</param>
        public ObjectResult<Sponsor> EditSponsor(Nullable<global::System.Int32> sponsorID, global::System.String sponsorName, global::System.String sponsorEmail, global::System.String sponsorWebsite, global::System.String sponsorMobile, global::System.String sponsorComment)
        {
            ObjectParameter sponsorIDParameter;
            if (sponsorID.HasValue)
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", sponsorID);
            }
            else
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", typeof(global::System.Int32));
            }
    
            ObjectParameter sponsorNameParameter;
            if (sponsorName != null)
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", sponsorName);
            }
            else
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", typeof(global::System.String));
            }
    
            ObjectParameter sponsorEmailParameter;
            if (sponsorEmail != null)
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", sponsorEmail);
            }
            else
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", typeof(global::System.String));
            }
    
            ObjectParameter sponsorWebsiteParameter;
            if (sponsorWebsite != null)
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", sponsorWebsite);
            }
            else
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", typeof(global::System.String));
            }
    
            ObjectParameter sponsorMobileParameter;
            if (sponsorMobile != null)
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", sponsorMobile);
            }
            else
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", typeof(global::System.String));
            }
    
            ObjectParameter sponsorCommentParameter;
            if (sponsorComment != null)
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", sponsorComment);
            }
            else
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Sponsor>("EditSponsor", sponsorIDParameter, sponsorNameParameter, sponsorEmailParameter, sponsorWebsiteParameter, sponsorMobileParameter, sponsorCommentParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="sponsorID">No Metadata Documentation available.</param>
        /// <param name="sponsorName">No Metadata Documentation available.</param>
        /// <param name="sponsorEmail">No Metadata Documentation available.</param>
        /// <param name="sponsorWebsite">No Metadata Documentation available.</param>
        /// <param name="sponsorMobile">No Metadata Documentation available.</param>
        /// <param name="sponsorComment">No Metadata Documentation available.</param>
        public ObjectResult<Sponsor> EditSponsor(Nullable<global::System.Int32> sponsorID, global::System.String sponsorName, global::System.String sponsorEmail, global::System.String sponsorWebsite, global::System.String sponsorMobile, global::System.String sponsorComment, MergeOption mergeOption)
        {
            ObjectParameter sponsorIDParameter;
            if (sponsorID.HasValue)
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", sponsorID);
            }
            else
            {
                sponsorIDParameter = new ObjectParameter("SponsorID", typeof(global::System.Int32));
            }
    
            ObjectParameter sponsorNameParameter;
            if (sponsorName != null)
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", sponsorName);
            }
            else
            {
                sponsorNameParameter = new ObjectParameter("SponsorName", typeof(global::System.String));
            }
    
            ObjectParameter sponsorEmailParameter;
            if (sponsorEmail != null)
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", sponsorEmail);
            }
            else
            {
                sponsorEmailParameter = new ObjectParameter("SponsorEmail", typeof(global::System.String));
            }
    
            ObjectParameter sponsorWebsiteParameter;
            if (sponsorWebsite != null)
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", sponsorWebsite);
            }
            else
            {
                sponsorWebsiteParameter = new ObjectParameter("SponsorWebsite", typeof(global::System.String));
            }
    
            ObjectParameter sponsorMobileParameter;
            if (sponsorMobile != null)
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", sponsorMobile);
            }
            else
            {
                sponsorMobileParameter = new ObjectParameter("SponsorMobile", typeof(global::System.String));
            }
    
            ObjectParameter sponsorCommentParameter;
            if (sponsorComment != null)
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", sponsorComment);
            }
            else
            {
                sponsorCommentParameter = new ObjectParameter("SponsorComment", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Sponsor>("EditSponsor", mergeOption, sponsorIDParameter, sponsorNameParameter, sponsorEmailParameter, sponsorWebsiteParameter, sponsorMobileParameter, sponsorCommentParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<SponsorView> ViewSponsors()
        {
            return base.ExecuteFunction<SponsorView>("ViewSponsors");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<SponsorView> ViewSponsors(MergeOption mergeOption)
        {
            return base.ExecuteFunction<SponsorView>("ViewSponsors", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mobile">No Metadata Documentation available.</param>
        public ObjectResult<Member> ViewMember(global::System.String mobile)
        {
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("ViewMember", mobileParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="mobile">No Metadata Documentation available.</param>
        public ObjectResult<Member> ViewMember(global::System.String mobile, MergeOption mergeOption)
        {
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Member>("ViewMember", mergeOption, mobileParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Member> ViewMembers()
        {
            return base.ExecuteFunction<Member>("ViewMembers");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Member> ViewMembers(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Member>("ViewMembers", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="shortDescription">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int EditEvent(Nullable<global::System.Int32> iD, global::System.String name, Nullable<global::System.DateTime> startDate, Nullable<global::System.DateTime> endDate, global::System.String description, global::System.String shortDescription, global::System.String comments)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter endDateParameter;
            if (endDate.HasValue)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter shortDescriptionParameter;
            if (shortDescription != null)
            {
                shortDescriptionParameter = new ObjectParameter("ShortDescription", shortDescription);
            }
            else
            {
                shortDescriptionParameter = new ObjectParameter("ShortDescription", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditEvent", iDParameter, nameParameter, startDateParameter, endDateParameter, descriptionParameter, shortDescriptionParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<StaticPage> GetStaticPageByID(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<StaticPage>("GetStaticPageByID", iDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public ObjectResult<StaticPage> GetStaticPageByID(Nullable<global::System.Int32> iD, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<StaticPage>("GetStaticPageByID", mergeOption, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="value">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> UniqueParticipant(global::System.String value)
        {
            ObjectParameter valueParameter;
            if (value != null)
            {
                valueParameter = new ObjectParameter("Value", value);
            }
            else
            {
                valueParameter = new ObjectParameter("Value", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("UniqueParticipant", valueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="mobile">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="homePhone">No Metadata Documentation available.</param>
        /// <param name="collegeID">No Metadata Documentation available.</param>
        /// <param name="universtyID">No Metadata Documentation available.</param>
        /// <param name="workshopID">No Metadata Documentation available.</param>
        /// <param name="interviewID">No Metadata Documentation available.</param>
        /// <param name="eventID">No Metadata Documentation available.</param>
        /// <param name="barcode">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        /// <param name="timeStamp">No Metadata Documentation available.</param>
        public int AddParticipant(global::System.String fullName, global::System.String mobile, global::System.String email, global::System.String homePhone, Nullable<global::System.Int32> collegeID, Nullable<global::System.Int32> universtyID, Nullable<global::System.Int32> workshopID, Nullable<global::System.Int32> interviewID, Nullable<global::System.Int32> eventID, global::System.String barcode, global::System.String comments, Nullable<global::System.DateTime> timeStamp)
        {
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            ObjectParameter homePhoneParameter;
            if (homePhone != null)
            {
                homePhoneParameter = new ObjectParameter("HomePhone", homePhone);
            }
            else
            {
                homePhoneParameter = new ObjectParameter("HomePhone", typeof(global::System.String));
            }
    
            ObjectParameter collegeIDParameter;
            if (collegeID.HasValue)
            {
                collegeIDParameter = new ObjectParameter("CollegeID", collegeID);
            }
            else
            {
                collegeIDParameter = new ObjectParameter("CollegeID", typeof(global::System.Int32));
            }
    
            ObjectParameter universtyIDParameter;
            if (universtyID.HasValue)
            {
                universtyIDParameter = new ObjectParameter("UniverstyID", universtyID);
            }
            else
            {
                universtyIDParameter = new ObjectParameter("UniverstyID", typeof(global::System.Int32));
            }
    
            ObjectParameter workshopIDParameter;
            if (workshopID.HasValue)
            {
                workshopIDParameter = new ObjectParameter("WorkshopID", workshopID);
            }
            else
            {
                workshopIDParameter = new ObjectParameter("WorkshopID", typeof(global::System.Int32));
            }
    
            ObjectParameter interviewIDParameter;
            if (interviewID.HasValue)
            {
                interviewIDParameter = new ObjectParameter("InterviewID", interviewID);
            }
            else
            {
                interviewIDParameter = new ObjectParameter("InterviewID", typeof(global::System.Int32));
            }
    
            ObjectParameter eventIDParameter;
            if (eventID.HasValue)
            {
                eventIDParameter = new ObjectParameter("EventID", eventID);
            }
            else
            {
                eventIDParameter = new ObjectParameter("EventID", typeof(global::System.Int32));
            }
    
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            ObjectParameter timeStampParameter;
            if (timeStamp.HasValue)
            {
                timeStampParameter = new ObjectParameter("TimeStamp", timeStamp);
            }
            else
            {
                timeStampParameter = new ObjectParameter("TimeStamp", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("AddParticipant", fullNameParameter, mobileParameter, emailParameter, homePhoneParameter, collegeIDParameter, universtyIDParameter, workshopIDParameter, interviewIDParameter, eventIDParameter, barcodeParameter, commentsParameter, timeStampParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int AddParticipantBarcode(global::System.String barcode, Nullable<global::System.Int32> iD)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddParticipantBarcode", barcodeParameter, iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mobile">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> GetParticipantID(global::System.String mobile)
        {
            ObjectParameter mobileParameter;
            if (mobile != null)
            {
                mobileParameter = new ObjectParameter("Mobile", mobile);
            }
            else
            {
                mobileParameter = new ObjectParameter("Mobile", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("GetParticipantID", mobileParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="memberID">No Metadata Documentation available.</param>
        public int AddMemberID(Nullable<global::System.Int32> iD, Nullable<global::System.Int32> memberID)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter memberIDParameter;
            if (memberID.HasValue)
            {
                memberIDParameter = new ObjectParameter("MemberID", memberID);
            }
            else
            {
                memberIDParameter = new ObjectParameter("MemberID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddMemberID", iDParameter, memberIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        /// <param name="logState">No Metadata Documentation available.</param>
        public int AddParticipantLogOn(global::System.String barcode, Nullable<global::System.Boolean> logState)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            ObjectParameter logStateParameter;
            if (logState.HasValue)
            {
                logStateParameter = new ObjectParameter("LogState", logState);
            }
            else
            {
                logStateParameter = new ObjectParameter("LogState", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("AddParticipantLogOn", barcodeParameter, logStateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> GetParticipantLogOn(global::System.String barcode)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("GetParticipantLogOn", barcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        public int DeleteParticipantLogOn(global::System.String barcode)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteParticipantLogOn", barcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="barcode">No Metadata Documentation available.</param>
        public ObjectResult<Participant> GetParticipant(Nullable<global::System.Int32> iD, global::System.String barcode)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Participant>("GetParticipant", iDParameter, barcodeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="barcode">No Metadata Documentation available.</param>
        public ObjectResult<Participant> GetParticipant(Nullable<global::System.Int32> iD, global::System.String barcode, MergeOption mergeOption)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Participant>("GetParticipant", mergeOption, iDParameter, barcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        /// <param name="comments">No Metadata Documentation available.</param>
        public int AddHRComment(global::System.String barcode, global::System.String comments)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("Barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("Barcode", typeof(global::System.String));
            }
    
            ObjectParameter commentsParameter;
            if (comments != null)
            {
                commentsParameter = new ObjectParameter("Comments", comments);
            }
            else
            {
                commentsParameter = new ObjectParameter("Comments", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddHRComment", barcodeParameter, commentsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Participant> GetHRComments()
        {
            return base.ExecuteFunction<Participant>("GetHRComments");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Participant> GetHRComments(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Participant>("GetHRComments", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<Participant> GetHRSeenComment(global::System.String type)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Participant>("GetHRSeenComment", typeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<Participant> GetHRSeenComment(global::System.String type, MergeOption mergeOption)
        {
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Participant>("GetHRSeenComment", mergeOption, typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Participant> GetHRSeenComments()
        {
            return base.ExecuteFunction<Participant>("GetHRSeenComments");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Participant> GetHRSeenComments(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Participant>("GetHRSeenComments", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="barcode">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> FirstFormFill(global::System.String barcode)
        {
            ObjectParameter barcodeParameter;
            if (barcode != null)
            {
                barcodeParameter = new ObjectParameter("barcode", barcode);
            }
            else
            {
                barcodeParameter = new ObjectParameter("barcode", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("FirstFormFill", barcodeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Participant> GetOffParticipants()
        {
            return base.ExecuteFunction<Participant>("GetOffParticipants");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Participant> GetOffParticipants(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Participant>("GetOffParticipants", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Participant> GetParticipants()
        {
            return base.ExecuteFunction<Participant>("GetParticipants");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Participant> GetParticipants(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Participant>("GetParticipants", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteStaticPage1(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteStaticPage1", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        public int EditStaticPage1(Nullable<global::System.Int32> iD, global::System.String name, global::System.String text)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditStaticPage1", iDParameter, nameParameter, textParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNames">No Metadata Documentation available.</param>
        /// <param name="roleNames">No Metadata Documentation available.</param>
        /// <param name="currentTimeUtc">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_UsersInRoles_AddUsersToRoles(global::System.String applicationName, global::System.String userNames, global::System.String roleNames, Nullable<global::System.DateTime> currentTimeUtc)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNamesParameter;
            if (userNames != null)
            {
                userNamesParameter = new ObjectParameter("UserNames", userNames);
            }
            else
            {
                userNamesParameter = new ObjectParameter("UserNames", typeof(global::System.String));
            }
    
            ObjectParameter roleNamesParameter;
            if (roleNames != null)
            {
                roleNamesParameter = new ObjectParameter("RoleNames", roleNames);
            }
            else
            {
                roleNamesParameter = new ObjectParameter("RoleNames", typeof(global::System.String));
            }
    
            ObjectParameter currentTimeUtcParameter;
            if (currentTimeUtc.HasValue)
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", currentTimeUtc);
            }
            else
            {
                currentTimeUtcParameter = new ObjectParameter("CurrentTimeUtc", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationName">No Metadata Documentation available.</param>
        /// <param name="userNames">No Metadata Documentation available.</param>
        /// <param name="roleNames">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(global::System.String applicationName, global::System.String userNames, global::System.String roleNames)
        {
            ObjectParameter applicationNameParameter;
            if (applicationName != null)
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", applicationName);
            }
            else
            {
                applicationNameParameter = new ObjectParameter("ApplicationName", typeof(global::System.String));
            }
    
            ObjectParameter userNamesParameter;
            if (userNames != null)
            {
                userNamesParameter = new ObjectParameter("UserNames", userNames);
            }
            else
            {
                userNamesParameter = new ObjectParameter("UserNames", typeof(global::System.String));
            }
    
            ObjectParameter roleNamesParameter;
            if (roleNames != null)
            {
                roleNamesParameter = new ObjectParameter("RoleNames", roleNames);
            }
            else
            {
                roleNamesParameter = new ObjectParameter("RoleNames", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteText(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteText", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="text">No Metadata Documentation available.</param>
        public int EditText(Nullable<global::System.Int32> iD, global::System.String name, global::System.String text)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter textParameter;
            if (text != null)
            {
                textParameter = new ObjectParameter("text", text);
            }
            else
            {
                textParameter = new ObjectParameter("text", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EditText", iDParameter, nameParameter, textParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static aspnet_Applications Createaspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            aspnet_Applications aspnet_Applications = new aspnet_Applications();
            aspnet_Applications.ApplicationName = applicationName;
            aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            aspnet_Applications.ApplicationId = applicationId;
            return aspnet_Applications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                OnLoweredApplicationNameChanging(value);
                ReportPropertyChanging("LoweredApplicationName");
                _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredApplicationName");
                OnLoweredApplicationNameChanged();
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Me__Appli__3C34F16F", "aspnet_Membership")]
        public EntityCollection<aspnet_Membership> aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Membership>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Membership>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pa__Appli__32AB8735", "aspnet_Paths")]
        public EntityCollection<aspnet_Paths> aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Paths>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Paths>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Ro__Appli__395884C4", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Us__Appli__3864608B", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Me__Appli__3C34F16F", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static aspnet_Paths Createaspnet_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            aspnet_Paths aspnet_Paths = new aspnet_Paths();
            aspnet_Paths.ApplicationId = applicationId;
            aspnet_Paths.PathId = pathId;
            aspnet_Paths.Path = path;
            aspnet_Paths.LoweredPath = loweredPath;
            return aspnet_Paths;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                OnLoweredPathChanging(value);
                ReportPropertyChanging("LoweredPath");
                _LoweredPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredPath");
                OnLoweredPathChanged();
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Pa__Appli__32AB8735", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_PersonalizationAllUsers")]
        public aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_PersonalizationAllUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_PersonalizationAllUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_PersonalizationAllUsers> aspnet_PersonalizationAllUsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_PersonalizationAllUsers>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_PersonalizationAllUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_PersonalizationAllUsers>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_PersonalizationAllUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3F115E1A", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_PersonalizationPerUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_PersonalizationAllUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationAllUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationAllUsers object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationAllUsers Createaspnet_PersonalizationAllUsers(global::System.Guid pathId, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationAllUsers aspnet_PersonalizationAllUsers = new aspnet_PersonalizationAllUsers();
            aspnet_PersonalizationAllUsers.PathId = pathId;
            aspnet_PersonalizationAllUsers.PageSettings = pageSettings;
            aspnet_PersonalizationAllUsers.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationAllUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3E1D39E1", "aspnet_Paths", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_PersonalizationPerUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_PersonalizationPerUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_PersonalizationPerUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageSettings">Initial value of the PageSettings property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_PersonalizationPerUser Createaspnet_PersonalizationPerUser(global::System.Guid id, global::System.Byte[] pageSettings, global::System.DateTime lastUpdatedDate)
        {
            aspnet_PersonalizationPerUser aspnet_PersonalizationPerUser = new aspnet_PersonalizationPerUser();
            aspnet_PersonalizationPerUser.Id = id;
            aspnet_PersonalizationPerUser.PageSettings = pageSettings;
            aspnet_PersonalizationPerUser.LastUpdatedDate = lastUpdatedDate;
            return aspnet_PersonalizationPerUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PageSettings
        {
            get
            {
                return StructuralObject.GetValidValue(_PageSettings);
            }
            set
            {
                OnPageSettingsChanging(value);
                ReportPropertyChanging("PageSettings");
                _PageSettings = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PageSettings");
                OnPageSettingsChanged();
            }
        }
        private global::System.Byte[] _PageSettings;
        partial void OnPageSettingsChanging(global::System.Byte[] value);
        partial void OnPageSettingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths")]
        public aspnet_Paths aspnet_Paths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Paths> aspnet_PathsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Paths>("websitedbModel.FK__aspnet_Pe__PathI__3F115E1A", "aspnet_Paths", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__UserI__40058253", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Profile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="propertyNames">Initial value of the PropertyNames property.</param>
        /// <param name="propertyValuesString">Initial value of the PropertyValuesString property.</param>
        /// <param name="propertyValuesBinary">Initial value of the PropertyValuesBinary property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static aspnet_Profile Createaspnet_Profile(global::System.Guid userId, global::System.String propertyNames, global::System.String propertyValuesString, global::System.Byte[] propertyValuesBinary, global::System.DateTime lastUpdatedDate)
        {
            aspnet_Profile aspnet_Profile = new aspnet_Profile();
            aspnet_Profile.UserId = userId;
            aspnet_Profile.PropertyNames = propertyNames;
            aspnet_Profile.PropertyValuesString = propertyValuesString;
            aspnet_Profile.PropertyValuesBinary = propertyValuesBinary;
            aspnet_Profile.LastUpdatedDate = lastUpdatedDate;
            return aspnet_Profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyNames
        {
            get
            {
                return _PropertyNames;
            }
            set
            {
                OnPropertyNamesChanging(value);
                ReportPropertyChanging("PropertyNames");
                _PropertyNames = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyNames");
                OnPropertyNamesChanged();
            }
        }
        private global::System.String _PropertyNames;
        partial void OnPropertyNamesChanging(global::System.String value);
        partial void OnPropertyNamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyValuesString
        {
            get
            {
                return _PropertyValuesString;
            }
            set
            {
                OnPropertyValuesStringChanging(value);
                ReportPropertyChanging("PropertyValuesString");
                _PropertyValuesString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesString");
                OnPropertyValuesStringChanged();
            }
        }
        private global::System.String _PropertyValuesString;
        partial void OnPropertyValuesStringChanging(global::System.String value);
        partial void OnPropertyValuesStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] PropertyValuesBinary
        {
            get
            {
                return StructuralObject.GetValidValue(_PropertyValuesBinary);
            }
            set
            {
                OnPropertyValuesBinaryChanging(value);
                ReportPropertyChanging("PropertyValuesBinary");
                _PropertyValuesBinary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyValuesBinary");
                OnPropertyValuesBinaryChanged();
            }
        }
        private global::System.Byte[] _PropertyValuesBinary;
        partial void OnPropertyValuesBinaryChanging(global::System.Byte[] value);
        partial void OnPropertyValuesBinaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static aspnet_Roles Createaspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            aspnet_Roles aspnet_Roles = new aspnet_Roles();
            aspnet_Roles.ApplicationId = applicationId;
            aspnet_Roles.RoleId = roleId;
            aspnet_Roles.RoleName = roleName;
            aspnet_Roles.LoweredRoleName = loweredRoleName;
            return aspnet_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                OnLoweredRoleNameChanging(value);
                ReportPropertyChanging("LoweredRoleName");
                _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredRoleName");
                OnLoweredRoleNameChanged();
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Ro__Appli__395884C4", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "aspnet_UsersInRoles", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("websitedbModel.aspnet_UsersInRoles", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("websitedbModel.aspnet_UsersInRoles", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_SchemaVersions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_SchemaVersions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_SchemaVersions object.
        /// </summary>
        /// <param name="feature">Initial value of the Feature property.</param>
        /// <param name="compatibleSchemaVersion">Initial value of the CompatibleSchemaVersion property.</param>
        /// <param name="isCurrentVersion">Initial value of the IsCurrentVersion property.</param>
        public static aspnet_SchemaVersions Createaspnet_SchemaVersions(global::System.String feature, global::System.String compatibleSchemaVersion, global::System.Boolean isCurrentVersion)
        {
            aspnet_SchemaVersions aspnet_SchemaVersions = new aspnet_SchemaVersions();
            aspnet_SchemaVersions.Feature = feature;
            aspnet_SchemaVersions.CompatibleSchemaVersion = compatibleSchemaVersion;
            aspnet_SchemaVersions.IsCurrentVersion = isCurrentVersion;
            return aspnet_SchemaVersions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Feature
        {
            get
            {
                return _Feature;
            }
            set
            {
                if (_Feature != value)
                {
                    OnFeatureChanging(value);
                    ReportPropertyChanging("Feature");
                    _Feature = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Feature");
                    OnFeatureChanged();
                }
            }
        }
        private global::System.String _Feature;
        partial void OnFeatureChanging(global::System.String value);
        partial void OnFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompatibleSchemaVersion
        {
            get
            {
                return _CompatibleSchemaVersion;
            }
            set
            {
                if (_CompatibleSchemaVersion != value)
                {
                    OnCompatibleSchemaVersionChanging(value);
                    ReportPropertyChanging("CompatibleSchemaVersion");
                    _CompatibleSchemaVersion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CompatibleSchemaVersion");
                    OnCompatibleSchemaVersionChanged();
                }
            }
        }
        private global::System.String _CompatibleSchemaVersion;
        partial void OnCompatibleSchemaVersionChanging(global::System.String value);
        partial void OnCompatibleSchemaVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrentVersion
        {
            get
            {
                return _IsCurrentVersion;
            }
            set
            {
                OnIsCurrentVersionChanging(value);
                ReportPropertyChanging("IsCurrentVersion");
                _IsCurrentVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrentVersion");
                OnIsCurrentVersionChanged();
            }
        }
        private global::System.Boolean _IsCurrentVersion;
        partial void OnIsCurrentVersionChanging(global::System.Boolean value);
        partial void OnIsCurrentVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Us__Appli__3864608B", "aspnet_Applications")]
        public aspnet_Applications aspnet_Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Applications> aspnet_ApplicationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Applications>("websitedbModel.FK__aspnet_Us__Appli__3864608B", "aspnet_Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Me__UserI__3D2915A8", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("websitedbModel.FK__aspnet_Me__UserI__3D2915A8", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pe__UserI__40058253", "aspnet_PersonalizationPerUser")]
        public EntityCollection<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_PersonalizationPerUser>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_PersonalizationPerUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_PersonalizationPerUser>("websitedbModel.FK__aspnet_Pe__UserI__40058253", "aspnet_PersonalizationPerUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Profile")]
        public aspnet_Profile aspnet_Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Profile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Profile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Profile> aspnet_ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Profile>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Profile>("websitedbModel.FK__aspnet_Pr__UserI__40F9A68C", "aspnet_Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "aspnet_UsersInRoles", "aspnet_Roles")]
        public EntityCollection<aspnet_Roles> aspnet_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Roles>("websitedbModel.aspnet_UsersInRoles", "aspnet_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Roles>("websitedbModel.aspnet_UsersInRoles", "aspnet_Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_WebEvent_Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_WebEvent_Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_WebEvent_Events object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventTimeUtc">Initial value of the EventTimeUtc property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventType">Initial value of the EventType property.</param>
        /// <param name="eventSequence">Initial value of the EventSequence property.</param>
        /// <param name="eventOccurrence">Initial value of the EventOccurrence property.</param>
        /// <param name="eventCode">Initial value of the EventCode property.</param>
        /// <param name="eventDetailCode">Initial value of the EventDetailCode property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        public static aspnet_WebEvent_Events Createaspnet_WebEvent_Events(global::System.String eventId, global::System.DateTime eventTimeUtc, global::System.DateTime eventTime, global::System.String eventType, global::System.Decimal eventSequence, global::System.Decimal eventOccurrence, global::System.Int32 eventCode, global::System.Int32 eventDetailCode, global::System.String machineName)
        {
            aspnet_WebEvent_Events aspnet_WebEvent_Events = new aspnet_WebEvent_Events();
            aspnet_WebEvent_Events.EventId = eventId;
            aspnet_WebEvent_Events.EventTimeUtc = eventTimeUtc;
            aspnet_WebEvent_Events.EventTime = eventTime;
            aspnet_WebEvent_Events.EventType = eventType;
            aspnet_WebEvent_Events.EventSequence = eventSequence;
            aspnet_WebEvent_Events.EventOccurrence = eventOccurrence;
            aspnet_WebEvent_Events.EventCode = eventCode;
            aspnet_WebEvent_Events.EventDetailCode = eventDetailCode;
            aspnet_WebEvent_Events.MachineName = machineName;
            return aspnet_WebEvent_Events;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.String _EventId;
        partial void OnEventIdChanging(global::System.String value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTimeUtc
        {
            get
            {
                return _EventTimeUtc;
            }
            set
            {
                OnEventTimeUtcChanging(value);
                ReportPropertyChanging("EventTimeUtc");
                _EventTimeUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTimeUtc");
                OnEventTimeUtcChanged();
            }
        }
        private global::System.DateTime _EventTimeUtc;
        partial void OnEventTimeUtcChanging(global::System.DateTime value);
        partial void OnEventTimeUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventSequence
        {
            get
            {
                return _EventSequence;
            }
            set
            {
                OnEventSequenceChanging(value);
                ReportPropertyChanging("EventSequence");
                _EventSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventSequence");
                OnEventSequenceChanged();
            }
        }
        private global::System.Decimal _EventSequence;
        partial void OnEventSequenceChanging(global::System.Decimal value);
        partial void OnEventSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EventOccurrence
        {
            get
            {
                return _EventOccurrence;
            }
            set
            {
                OnEventOccurrenceChanging(value);
                ReportPropertyChanging("EventOccurrence");
                _EventOccurrence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventOccurrence");
                OnEventOccurrenceChanged();
            }
        }
        private global::System.Decimal _EventOccurrence;
        partial void OnEventOccurrenceChanging(global::System.Decimal value);
        partial void OnEventOccurrenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventCode
        {
            get
            {
                return _EventCode;
            }
            set
            {
                OnEventCodeChanging(value);
                ReportPropertyChanging("EventCode");
                _EventCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventCode");
                OnEventCodeChanged();
            }
        }
        private global::System.Int32 _EventCode;
        partial void OnEventCodeChanging(global::System.Int32 value);
        partial void OnEventCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDetailCode
        {
            get
            {
                return _EventDetailCode;
            }
            set
            {
                OnEventDetailCodeChanging(value);
                ReportPropertyChanging("EventDetailCode");
                _EventDetailCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDetailCode");
                OnEventDetailCodeChanged();
            }
        }
        private global::System.Int32 _EventDetailCode;
        partial void OnEventDetailCodeChanging(global::System.Int32 value);
        partial void OnEventDetailCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationPath
        {
            get
            {
                return _ApplicationPath;
            }
            set
            {
                OnApplicationPathChanging(value);
                ReportPropertyChanging("ApplicationPath");
                _ApplicationPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationPath");
                OnApplicationPathChanged();
            }
        }
        private global::System.String _ApplicationPath;
        partial void OnApplicationPathChanging(global::System.String value);
        partial void OnApplicationPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationVirtualPath
        {
            get
            {
                return _ApplicationVirtualPath;
            }
            set
            {
                OnApplicationVirtualPathChanging(value);
                ReportPropertyChanging("ApplicationVirtualPath");
                _ApplicationVirtualPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationVirtualPath");
                OnApplicationVirtualPathChanged();
            }
        }
        private global::System.String _ApplicationVirtualPath;
        partial void OnApplicationVirtualPathChanging(global::System.String value);
        partial void OnApplicationVirtualPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestUrl
        {
            get
            {
                return _RequestUrl;
            }
            set
            {
                OnRequestUrlChanging(value);
                ReportPropertyChanging("RequestUrl");
                _RequestUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RequestUrl");
                OnRequestUrlChanged();
            }
        }
        private global::System.String _RequestUrl;
        partial void OnRequestUrlChanging(global::System.String value);
        partial void OnRequestUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExceptionType
        {
            get
            {
                return _ExceptionType;
            }
            set
            {
                OnExceptionTypeChanging(value);
                ReportPropertyChanging("ExceptionType");
                _ExceptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExceptionType");
                OnExceptionTypeChanged();
            }
        }
        private global::System.String _ExceptionType;
        partial void OnExceptionTypeChanging(global::System.String value);
        partial void OnExceptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="College")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class College : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new College object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static College CreateCollege(global::System.Int32 id, global::System.String name, global::System.String location)
        {
            College college = new College();
            college.ID = id;
            college.Name = name;
            college.Location = location;
            return college;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_College", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("websitedbModel.FK_Member_College", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("websitedbModel.FK_Member_College", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "UniversityCollege", "University")]
        public EntityCollection<University> Universities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<University>("websitedbModel.UniversityCollege", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<University>("websitedbModel.UniversityCollege", "University", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Committee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Committee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Committee object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Committee CreateCommittee(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            Committee committee = new Committee();
            committee.ID = id;
            committee.Name = name;
            committee.Description = description;
            return committee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_Committee", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("websitedbModel.FK_Member_Committee", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("websitedbModel.FK_Member_Committee", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="ContactU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactU object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static ContactU CreateContactU(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String subject, global::System.String message)
        {
            ContactU contactU = new ContactU();
            contactU.ID = id;
            contactU.Name = name;
            contactU.Email = email;
            contactU.Subject = subject;
            contactU.Message = message;
            return contactU;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String name, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String description, global::System.String shortDescription)
        {
            Event @event = new Event();
            @event.ID = id;
            @event.Name = name;
            @event.StartDate = startDate;
            @event.EndDate = endDate;
            @event.Description = description;
            @event.ShortDescription = shortDescription;
            return @event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private Nullable<global::System.Boolean> _state;
        partial void OnstateChanging(Nullable<global::System.Boolean> value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Gallery_Event", "Gallery")]
        public EntityCollection<Gallery> Galleries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Gallery>("websitedbModel.FK_Gallery_Event", "Gallery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Gallery>("websitedbModel.FK_Gallery_Event", "Gallery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "EventSponsor1", "Sponsor")]
        public EntityCollection<Sponsor> Sponsors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sponsor>("websitedbModel.EventSponsor1", "Sponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sponsor>("websitedbModel.EventSponsor1", "Sponsor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "EventUniversity1", "University")]
        public EntityCollection<University> Universities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<University>("websitedbModel.EventUniversity1", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<University>("websitedbModel.EventUniversity1", "University", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "MemberEvent1", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("websitedbModel.MemberEvent1", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("websitedbModel.MemberEvent1", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="EventsName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventsName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventsName object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventsName CreateEventsName(global::System.Int32 id, global::System.String name)
        {
            EventsName eventsName = new EventsName();
            eventsName.ID = id;
            eventsName.Name = name;
            return eventsName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="EventSponsor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventSponsor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventSponsor object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="sponsorID">Initial value of the SponsorID property.</param>
        public static EventSponsor CreateEventSponsor(global::System.Int32 eventID, global::System.Int32 sponsorID)
        {
            EventSponsor eventSponsor = new EventSponsor();
            eventSponsor.EventID = eventID;
            eventSponsor.SponsorID = sponsorID;
            return eventSponsor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SponsorID
        {
            get
            {
                return _SponsorID;
            }
            set
            {
                if (_SponsorID != value)
                {
                    OnSponsorIDChanging(value);
                    ReportPropertyChanging("SponsorID");
                    _SponsorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SponsorID");
                    OnSponsorIDChanged();
                }
            }
        }
        private global::System.Int32 _SponsorID;
        partial void OnSponsorIDChanging(global::System.Int32 value);
        partial void OnSponsorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_EventSponsor_Sponsor", "Sponsor")]
        public Sponsor Sponsor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sponsor>("websitedbModel.FK_EventSponsor_Sponsor", "Sponsor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sponsor>("websitedbModel.FK_EventSponsor_Sponsor", "Sponsor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sponsor> SponsorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sponsor>("websitedbModel.FK_EventSponsor_Sponsor", "Sponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sponsor>("websitedbModel.FK_EventSponsor_Sponsor", "Sponsor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="EventUniversity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventUniversity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventUniversity object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="universityID">Initial value of the UniversityID property.</param>
        public static EventUniversity CreateEventUniversity(global::System.Int32 eventID, global::System.Int32 universityID)
        {
            EventUniversity eventUniversity = new EventUniversity();
            eventUniversity.EventID = eventID;
            eventUniversity.UniversityID = universityID;
            return eventUniversity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniversityID
        {
            get
            {
                return _UniversityID;
            }
            set
            {
                if (_UniversityID != value)
                {
                    OnUniversityIDChanging(value);
                    ReportPropertyChanging("UniversityID");
                    _UniversityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UniversityID");
                    OnUniversityIDChanged();
                }
            }
        }
        private global::System.Int32 _UniversityID;
        partial void OnUniversityIDChanging(global::System.Int32 value);
        partial void OnUniversityIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_EventUniversity_University", "University")]
        public University University
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("websitedbModel.FK_EventUniversity_University", "University").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("websitedbModel.FK_EventUniversity_University", "University").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<University> UniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<University>("websitedbModel.FK_EventUniversity_University", "University");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<University>("websitedbModel.FK_EventUniversity_University", "University", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Gallery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gallery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gallery object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static Gallery CreateGallery(global::System.Int32 id, global::System.String name, global::System.String type, global::System.Int32 eventID)
        {
            Gallery gallery = new Gallery();
            gallery.ID = id;
            gallery.Name = name;
            gallery.Type = type;
            gallery.EventID = eventID;
            return gallery;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Gallery_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("websitedbModel.FK_Gallery_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("websitedbModel.FK_Gallery_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("websitedbModel.FK_Gallery_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("websitedbModel.FK_Gallery_Event", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="GalleryName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GalleryName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GalleryName object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        public static GalleryName CreateGalleryName(global::System.String name, global::System.Int32 id)
        {
            GalleryName galleryName = new GalleryName();
            galleryName.Name = name;
            galleryName.ID = id;
            return galleryName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Interview")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Interview : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Interview object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        public static Interview CreateInterview(global::System.Int32 id, global::System.String time, global::System.Int32 count)
        {
            Interview interview = new Interview();
            interview.ID = id;
            interview.Time = time;
            interview.Count = count;
            return interview;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="mobile">Initial value of the Mobile property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="committeeID">Initial value of the CommitteeID property.</param>
        /// <param name="collegeID">Initial value of the CollegeID property.</param>
        /// <param name="universityID">Initial value of the UniversityID property.</param>
        /// <param name="positionID">Initial value of the PositionID property.</param>
        /// <param name="state">Initial value of the state property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="hireYear">Initial value of the HireYear property.</param>
        /// <param name="birthdate">Initial value of the Birthdate property.</param>
        /// <param name="profilePicture">Initial value of the ProfilePicture property.</param>
        public static Member CreateMember(global::System.Int32 id, global::System.String fullName, global::System.String mobile, global::System.String email, global::System.Int32 committeeID, global::System.Int32 collegeID, global::System.Int32 universityID, global::System.Int32 positionID, global::System.String state, global::System.String address, global::System.DateTime hireYear, global::System.DateTime birthdate, global::System.String profilePicture)
        {
            Member member = new Member();
            member.ID = id;
            member.FullName = fullName;
            member.Mobile = mobile;
            member.Email = email;
            member.CommitteeID = committeeID;
            member.CollegeID = collegeID;
            member.UniversityID = universityID;
            member.PositionID = positionID;
            member.state = state;
            member.Address = address;
            member.HireYear = hireYear;
            member.Birthdate = birthdate;
            member.ProfilePicture = profilePicture;
            return member;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommitteeID
        {
            get
            {
                return _CommitteeID;
            }
            set
            {
                OnCommitteeIDChanging(value);
                ReportPropertyChanging("CommitteeID");
                _CommitteeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitteeID");
                OnCommitteeIDChanged();
            }
        }
        private global::System.Int32 _CommitteeID;
        partial void OnCommitteeIDChanging(global::System.Int32 value);
        partial void OnCommitteeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollegeID
        {
            get
            {
                return _CollegeID;
            }
            set
            {
                OnCollegeIDChanging(value);
                ReportPropertyChanging("CollegeID");
                _CollegeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollegeID");
                OnCollegeIDChanged();
            }
        }
        private global::System.Int32 _CollegeID;
        partial void OnCollegeIDChanging(global::System.Int32 value);
        partial void OnCollegeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniversityID
        {
            get
            {
                return _UniversityID;
            }
            set
            {
                OnUniversityIDChanging(value);
                ReportPropertyChanging("UniversityID");
                _UniversityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniversityID");
                OnUniversityIDChanged();
            }
        }
        private global::System.Int32 _UniversityID;
        partial void OnUniversityIDChanging(global::System.Int32 value);
        partial void OnUniversityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionID
        {
            get
            {
                return _PositionID;
            }
            set
            {
                OnPositionIDChanging(value);
                ReportPropertyChanging("PositionID");
                _PositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionID");
                OnPositionIDChanged();
            }
        }
        private global::System.Int32 _PositionID;
        partial void OnPositionIDChanging(global::System.Int32 value);
        partial void OnPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HireYear
        {
            get
            {
                return _HireYear;
            }
            set
            {
                OnHireYearChanging(value);
                ReportPropertyChanging("HireYear");
                _HireYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HireYear");
                OnHireYearChanged();
            }
        }
        private global::System.DateTime _HireYear;
        partial void OnHireYearChanging(global::System.DateTime value);
        partial void OnHireYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private global::System.DateTime _Birthdate;
        partial void OnBirthdateChanging(global::System.DateTime value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProfilePicture
        {
            get
            {
                return _ProfilePicture;
            }
            set
            {
                OnProfilePictureChanging(value);
                ReportPropertyChanging("ProfilePicture");
                _ProfilePicture = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProfilePicture");
                OnProfilePictureChanged();
            }
        }
        private global::System.String _ProfilePicture;
        partial void OnProfilePictureChanging(global::System.String value);
        partial void OnProfilePictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_College", "College")]
        public College College
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("websitedbModel.FK_Member_College", "College").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("websitedbModel.FK_Member_College", "College").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<College> CollegeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<College>("websitedbModel.FK_Member_College", "College");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<College>("websitedbModel.FK_Member_College", "College", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_Committee", "Committee")]
        public Committee Committee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Committee>("websitedbModel.FK_Member_Committee", "Committee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Committee>("websitedbModel.FK_Member_Committee", "Committee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Committee> CommitteeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Committee>("websitedbModel.FK_Member_Committee", "Committee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Committee>("websitedbModel.FK_Member_Committee", "Committee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_Position", "Position")]
        public Position Position
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("websitedbModel.FK_Member_Position", "Position").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("websitedbModel.FK_Member_Position", "Position").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Position> PositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Position>("websitedbModel.FK_Member_Position", "Position");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Position>("websitedbModel.FK_Member_Position", "Position", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_MemberEvent_Member", "MemberEvent")]
        public EntityCollection<MemberEvent> MemberEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MemberEvent>("websitedbModel.FK_MemberEvent_Member", "MemberEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MemberEvent>("websitedbModel.FK_MemberEvent_Member", "MemberEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "MemberEvent1", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("websitedbModel.MemberEvent1", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("websitedbModel.MemberEvent1", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Participant_Member", "Participant")]
        public EntityCollection<Participant> Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("websitedbModel.FK_Participant_Member", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("websitedbModel.FK_Participant_Member", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="MemberEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MemberEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MemberEvent object.
        /// </summary>
        /// <param name="memberID">Initial value of the MemberID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static MemberEvent CreateMemberEvent(global::System.Int32 memberID, global::System.Int32 eventID)
        {
            MemberEvent memberEvent = new MemberEvent();
            memberEvent.MemberID = memberID;
            memberEvent.EventID = eventID;
            return memberEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MemberID
        {
            get
            {
                return _MemberID;
            }
            set
            {
                if (_MemberID != value)
                {
                    OnMemberIDChanging(value);
                    ReportPropertyChanging("MemberID");
                    _MemberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MemberID");
                    OnMemberIDChanged();
                }
            }
        }
        private global::System.Int32 _MemberID;
        partial void OnMemberIDChanging(global::System.Int32 value);
        partial void OnMemberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_MemberEvent_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_MemberEvent_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_MemberEvent_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_MemberEvent_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("websitedbModel.FK_MemberEvent_Member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="MembersName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MembersName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MembersName object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static MembersName CreateMembersName(global::System.Int32 id, global::System.String fullName)
        {
            MembersName membersName = new MembersName();
            membersName.ID = id;
            membersName.FullName = fullName;
            return membersName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                if (_FullName != value)
                {
                    OnFullNameChanging(value);
                    ReportPropertyChanging("FullName");
                    _FullName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FullName");
                    OnFullNameChanged();
                }
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Participant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Participant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Participant object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="mobile">Initial value of the Mobile property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="collegeID">Initial value of the CollegeID property.</param>
        /// <param name="universtyID">Initial value of the UniverstyID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="timestamp">Initial value of the timestamp property.</param>
        public static Participant CreateParticipant(global::System.Int32 id, global::System.String fullName, global::System.String mobile, global::System.String email, global::System.Int32 collegeID, global::System.Int32 universtyID, global::System.Int32 eventID, global::System.DateTime timestamp)
        {
            Participant participant = new Participant();
            participant.ID = id;
            participant.FullName = fullName;
            participant.Mobile = mobile;
            participant.Email = email;
            participant.CollegeID = collegeID;
            participant.UniverstyID = universtyID;
            participant.EventID = eventID;
            participant.timestamp = timestamp;
            return participant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollegeID
        {
            get
            {
                return _CollegeID;
            }
            set
            {
                OnCollegeIDChanging(value);
                ReportPropertyChanging("CollegeID");
                _CollegeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollegeID");
                OnCollegeIDChanged();
            }
        }
        private global::System.Int32 _CollegeID;
        partial void OnCollegeIDChanging(global::System.Int32 value);
        partial void OnCollegeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UniverstyID
        {
            get
            {
                return _UniverstyID;
            }
            set
            {
                OnUniverstyIDChanging(value);
                ReportPropertyChanging("UniverstyID");
                _UniverstyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniverstyID");
                OnUniverstyIDChanged();
            }
        }
        private global::System.Int32 _UniverstyID;
        partial void OnUniverstyIDChanging(global::System.Int32 value);
        partial void OnUniverstyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WorkshopID
        {
            get
            {
                return _WorkshopID;
            }
            set
            {
                OnWorkshopIDChanging(value);
                ReportPropertyChanging("WorkshopID");
                _WorkshopID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkshopID");
                OnWorkshopIDChanged();
            }
        }
        private Nullable<global::System.Int32> _WorkshopID;
        partial void OnWorkshopIDChanging(Nullable<global::System.Int32> value);
        partial void OnWorkshopIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InterviewID
        {
            get
            {
                return _InterviewID;
            }
            set
            {
                OnInterviewIDChanging(value);
                ReportPropertyChanging("InterviewID");
                _InterviewID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InterviewID");
                OnInterviewIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InterviewID;
        partial void OnInterviewIDChanging(Nullable<global::System.Int32> value);
        partial void OnInterviewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.String _Barcode;
        partial void OnBarcodeChanging(global::System.String value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime timestamp
        {
            get
            {
                return _timestamp;
            }
            set
            {
                OntimestampChanging(value);
                ReportPropertyChanging("timestamp");
                _timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timestamp");
                OntimestampChanged();
            }
        }
        private global::System.DateTime _timestamp;
        partial void OntimestampChanging(global::System.DateTime value);
        partial void OntimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRID
        {
            get
            {
                return _PRID;
            }
            set
            {
                OnPRIDChanging(value);
                ReportPropertyChanging("PRID");
                _PRID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRID");
                OnPRIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PRID;
        partial void OnPRIDChanging(Nullable<global::System.Int32> value);
        partial void OnPRIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> LogOn
        {
            get
            {
                return _LogOn;
            }
            set
            {
                OnLogOnChanging(value);
                ReportPropertyChanging("LogOn");
                _LogOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogOn");
                OnLogOnChanged();
            }
        }
        private Nullable<global::System.Boolean> _LogOn;
        partial void OnLogOnChanging(Nullable<global::System.Boolean> value);
        partial void OnLogOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HRComments
        {
            get
            {
                return _HRComments;
            }
            set
            {
                OnHRCommentsChanging(value);
                ReportPropertyChanging("HRComments");
                _HRComments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HRComments");
                OnHRCommentsChanged();
            }
        }
        private global::System.String _HRComments;
        partial void OnHRCommentsChanging(global::System.String value);
        partial void OnHRCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Participant_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_Participant_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_Participant_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("websitedbModel.FK_Participant_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("websitedbModel.FK_Participant_Member", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Position CreatePosition(global::System.Int32 id, global::System.String name)
        {
            Position position = new Position();
            position.ID = id;
            position.Name = name;
            return position;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_Member_Position", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("websitedbModel.FK_Member_Position", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("websitedbModel.FK_Member_Position", "Member", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Sponsor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sponsor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sponsor object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="website">Initial value of the Website property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="contactNumber">Initial value of the ContactNumber property.</param>
        public static Sponsor CreateSponsor(global::System.Int32 id, global::System.String name, global::System.String website, global::System.String email, global::System.String contactNumber)
        {
            Sponsor sponsor = new Sponsor();
            sponsor.ID = id;
            sponsor.Name = name;
            sponsor.Website = website;
            sponsor.Email = email;
            sponsor.ContactNumber = contactNumber;
            return sponsor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_EventSponsor_Sponsor", "EventSponsor")]
        public EntityCollection<EventSponsor> EventSponsors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventSponsor>("websitedbModel.FK_EventSponsor_Sponsor", "EventSponsor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventSponsor>("websitedbModel.FK_EventSponsor_Sponsor", "EventSponsor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "EventSponsor1", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("websitedbModel.EventSponsor1", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("websitedbModel.EventSponsor1", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="SponsorView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SponsorView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SponsorView object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static SponsorView CreateSponsorView(global::System.String name, global::System.Int32 id, global::System.String eventName, global::System.Int32 eventID)
        {
            SponsorView sponsorView = new SponsorView();
            sponsorView.Name = name;
            sponsorView.ID = id;
            sponsorView.EventName = eventName;
            sponsorView.EventID = eventID;
            return sponsorView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                if (_EventName != value)
                {
                    OnEventNameChanging(value);
                    ReportPropertyChanging("EventName");
                    _EventName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EventName");
                    OnEventNameChanged();
                }
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="StaticPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StaticPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StaticPage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        public static StaticPage CreateStaticPage(global::System.Int32 id, global::System.String name, global::System.String content)
        {
            StaticPage staticPage = new StaticPage();
            staticPage.ID = id;
            staticPage.Name = name;
            staticPage.Content = content;
            return staticPage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="University")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class University : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new University object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static University CreateUniversity(global::System.Int32 id, global::System.String name, global::System.String location)
        {
            University university = new University();
            university.ID = id;
            university.Name = name;
            university.Location = location;
            return university;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "FK_EventUniversity_University", "EventUniversity")]
        public EntityCollection<EventUniversity> EventUniversities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventUniversity>("websitedbModel.FK_EventUniversity_University", "EventUniversity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventUniversity>("websitedbModel.FK_EventUniversity_University", "EventUniversity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "UniversityCollege", "College")]
        public EntityCollection<College> Colleges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<College>("websitedbModel.UniversityCollege", "College");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<College>("websitedbModel.UniversityCollege", "College", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("websitedbModel", "EventUniversity1", "Event")]
        public EntityCollection<Event> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("websitedbModel.EventUniversity1", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("websitedbModel.EventUniversity1", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_Applications")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Applications : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Applications object.
        /// </summary>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="loweredApplicationName">Initial value of the LoweredApplicationName property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        public static vw_aspnet_Applications Createvw_aspnet_Applications(global::System.String applicationName, global::System.String loweredApplicationName, global::System.Guid applicationId)
        {
            vw_aspnet_Applications vw_aspnet_Applications = new vw_aspnet_Applications();
            vw_aspnet_Applications.ApplicationName = applicationName;
            vw_aspnet_Applications.LoweredApplicationName = loweredApplicationName;
            vw_aspnet_Applications.ApplicationId = applicationId;
            return vw_aspnet_Applications;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                if (_ApplicationName != value)
                {
                    OnApplicationNameChanging(value);
                    ReportPropertyChanging("ApplicationName");
                    _ApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ApplicationName");
                    OnApplicationNameChanged();
                }
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredApplicationName
        {
            get
            {
                return _LoweredApplicationName;
            }
            set
            {
                if (_LoweredApplicationName != value)
                {
                    OnLoweredApplicationNameChanging(value);
                    ReportPropertyChanging("LoweredApplicationName");
                    _LoweredApplicationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredApplicationName");
                    OnLoweredApplicationNameChanged();
                }
            }
        }
        private global::System.String _LoweredApplicationName;
        partial void OnLoweredApplicationNameChanging(global::System.String value);
        partial void OnLoweredApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_MembershipUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_MembershipUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_MembershipUsers object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_MembershipUsers Createvw_aspnet_MembershipUsers(global::System.Guid userId, global::System.Int32 passwordFormat, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart, global::System.Guid applicationId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers = new vw_aspnet_MembershipUsers();
            vw_aspnet_MembershipUsers.UserId = userId;
            vw_aspnet_MembershipUsers.PasswordFormat = passwordFormat;
            vw_aspnet_MembershipUsers.IsApproved = isApproved;
            vw_aspnet_MembershipUsers.IsLockedOut = isLockedOut;
            vw_aspnet_MembershipUsers.CreateDate = createDate;
            vw_aspnet_MembershipUsers.LastLoginDate = lastLoginDate;
            vw_aspnet_MembershipUsers.LastPasswordChangedDate = lastPasswordChangedDate;
            vw_aspnet_MembershipUsers.LastLockoutDate = lastLockoutDate;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            vw_aspnet_MembershipUsers.ApplicationId = applicationId;
            vw_aspnet_MembershipUsers.UserName = userName;
            vw_aspnet_MembershipUsers.IsAnonymous = isAnonymous;
            vw_aspnet_MembershipUsers.LastActivityDate = lastActivityDate;
            return vw_aspnet_MembershipUsers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                if (_PasswordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    ReportPropertyChanging("PasswordFormat");
                    _PasswordFormat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    ReportPropertyChanging("IsLockedOut");
                    _IsLockedOut = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    ReportPropertyChanging("LastLoginDate");
                    _LastLoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    ReportPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                if (_LastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    ReportPropertyChanging("LastLockoutDate");
                    _LastLockoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                if (_FailedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptCount");
                    _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                    _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_Profiles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Profiles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Profiles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_Profiles Createvw_aspnet_Profiles(global::System.Guid userId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_Profiles vw_aspnet_Profiles = new vw_aspnet_Profiles();
            vw_aspnet_Profiles.UserId = userId;
            vw_aspnet_Profiles.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_Profiles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Roles object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="loweredRoleName">Initial value of the LoweredRoleName property.</param>
        public static vw_aspnet_Roles Createvw_aspnet_Roles(global::System.Guid applicationId, global::System.Guid roleId, global::System.String roleName, global::System.String loweredRoleName)
        {
            vw_aspnet_Roles vw_aspnet_Roles = new vw_aspnet_Roles();
            vw_aspnet_Roles.ApplicationId = applicationId;
            vw_aspnet_Roles.RoleId = roleId;
            vw_aspnet_Roles.RoleName = roleName;
            vw_aspnet_Roles.LoweredRoleName = loweredRoleName;
            return vw_aspnet_Roles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                if (_RoleName != value)
                {
                    OnRoleNameChanging(value);
                    ReportPropertyChanging("RoleName");
                    _RoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleName");
                    OnRoleNameChanged();
                }
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredRoleName
        {
            get
            {
                return _LoweredRoleName;
            }
            set
            {
                if (_LoweredRoleName != value)
                {
                    OnLoweredRoleNameChanging(value);
                    ReportPropertyChanging("LoweredRoleName");
                    _LoweredRoleName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredRoleName");
                    OnLoweredRoleNameChanged();
                }
            }
        }
        private global::System.String _LoweredRoleName;
        partial void OnLoweredRoleNameChanging(global::System.String value);
        partial void OnLoweredRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_Users Createvw_aspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_Users vw_aspnet_Users = new vw_aspnet_Users();
            vw_aspnet_Users.ApplicationId = applicationId;
            vw_aspnet_Users.UserId = userId;
            vw_aspnet_Users.UserName = userName;
            vw_aspnet_Users.LoweredUserName = loweredUserName;
            vw_aspnet_Users.IsAnonymous = isAnonymous;
            vw_aspnet_Users.LastActivityDate = lastActivityDate;
            return vw_aspnet_Users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                if (_LoweredUserName != value)
                {
                    OnLoweredUserNameChanging(value);
                    ReportPropertyChanging("LoweredUserName");
                    _LoweredUserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredUserName");
                    OnLoweredUserNameChanged();
                }
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_UsersInRoles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_UsersInRoles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_UsersInRoles object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static vw_aspnet_UsersInRoles Createvw_aspnet_UsersInRoles(global::System.Guid userId, global::System.Guid roleId)
        {
            vw_aspnet_UsersInRoles vw_aspnet_UsersInRoles = new vw_aspnet_UsersInRoles();
            vw_aspnet_UsersInRoles.UserId = userId;
            vw_aspnet_UsersInRoles.RoleId = roleId;
            return vw_aspnet_UsersInRoles;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_WebPartState_Paths")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Paths : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Paths object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        /// <param name="loweredPath">Initial value of the LoweredPath property.</param>
        public static vw_aspnet_WebPartState_Paths Createvw_aspnet_WebPartState_Paths(global::System.Guid applicationId, global::System.Guid pathId, global::System.String path, global::System.String loweredPath)
        {
            vw_aspnet_WebPartState_Paths vw_aspnet_WebPartState_Paths = new vw_aspnet_WebPartState_Paths();
            vw_aspnet_WebPartState_Paths.ApplicationId = applicationId;
            vw_aspnet_WebPartState_Paths.PathId = pathId;
            vw_aspnet_WebPartState_Paths.Path = path;
            vw_aspnet_WebPartState_Paths.LoweredPath = loweredPath;
            return vw_aspnet_WebPartState_Paths;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                if (_Path != value)
                {
                    OnPathChanging(value);
                    ReportPropertyChanging("Path");
                    _Path = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Path");
                    OnPathChanged();
                }
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredPath
        {
            get
            {
                return _LoweredPath;
            }
            set
            {
                if (_LoweredPath != value)
                {
                    OnLoweredPathChanging(value);
                    ReportPropertyChanging("LoweredPath");
                    _LoweredPath = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LoweredPath");
                    OnLoweredPathChanged();
                }
            }
        }
        private global::System.String _LoweredPath;
        partial void OnLoweredPathChanging(global::System.String value);
        partial void OnLoweredPathChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_WebPartState_Shared")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_Shared : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_Shared object.
        /// </summary>
        /// <param name="pathId">Initial value of the PathId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_Shared Createvw_aspnet_WebPartState_Shared(global::System.Guid pathId, global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_Shared vw_aspnet_WebPartState_Shared = new vw_aspnet_WebPartState_Shared();
            vw_aspnet_WebPartState_Shared.PathId = pathId;
            vw_aspnet_WebPartState_Shared.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_Shared;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                if (_PathId != value)
                {
                    OnPathIdChanging(value);
                    ReportPropertyChanging("PathId");
                    _PathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }
        private global::System.Guid _PathId;
        partial void OnPathIdChanging(global::System.Guid value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="vw_aspnet_WebPartState_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_WebPartState_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_WebPartState_User object.
        /// </summary>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        public static vw_aspnet_WebPartState_User Createvw_aspnet_WebPartState_User(global::System.DateTime lastUpdatedDate)
        {
            vw_aspnet_WebPartState_User vw_aspnet_WebPartState_User = new vw_aspnet_WebPartState_User();
            vw_aspnet_WebPartState_User.LastUpdatedDate = lastUpdatedDate;
            return vw_aspnet_WebPartState_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PathId
        {
            get
            {
                return _PathId;
            }
            set
            {
                OnPathIdChanging(value);
                ReportPropertyChanging("PathId");
                _PathId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PathId");
                OnPathIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PathId;
        partial void OnPathIdChanging(Nullable<global::System.Guid> value);
        partial void OnPathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataSize
        {
            get
            {
                return _DataSize;
            }
            set
            {
                OnDataSizeChanging(value);
                ReportPropertyChanging("DataSize");
                _DataSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataSize");
                OnDataSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _DataSize;
        partial void OnDataSizeChanging(Nullable<global::System.Int32> value);
        partial void OnDataSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                if (_LastUpdatedDate != value)
                {
                    OnLastUpdatedDateChanging(value);
                    ReportPropertyChanging("LastUpdatedDate");
                    _LastUpdatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastUpdatedDate");
                    OnLastUpdatedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="websitedbModel", Name="Workshop")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workshop : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Workshop object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        public static Workshop CreateWorkshop(global::System.Int32 id, global::System.String name, global::System.Int32 eventID)
        {
            Workshop workshop = new Workshop();
            workshop.ID = id;
            workshop.Name = name;
            workshop.EventID = eventID;
            return workshop;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="websitedbModel", Name="aspnet_UsersInRoles_RemoveUsersFromRoles_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class aspnet_UsersInRoles_RemoveUsersFromRoles_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_UsersInRoles_RemoveUsersFromRoles_Result object.
        /// </summary>
        /// <param name="column1">Initial value of the Column1 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static aspnet_UsersInRoles_RemoveUsersFromRoles_Result Createaspnet_UsersInRoles_RemoveUsersFromRoles_Result(global::System.String column1, global::System.String name)
        {
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result aspnet_UsersInRoles_RemoveUsersFromRoles_Result = new aspnet_UsersInRoles_RemoveUsersFromRoles_Result();
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result.Column1 = column1;
            aspnet_UsersInRoles_RemoveUsersFromRoles_Result.Name = name;
            return aspnet_UsersInRoles_RemoveUsersFromRoles_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.String _Column1;
        partial void OnColumn1Changing(global::System.String value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }

    #endregion

    
}
